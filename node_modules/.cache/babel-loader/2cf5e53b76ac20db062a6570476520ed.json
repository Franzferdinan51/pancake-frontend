{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport { getCakeVaultContract } from 'utils/contractHelpers';\nconst cakeVaultContract = getCakeVaultContract();\n\nconst fetchVaultUser = async account => {\n  try {\n    const userContractResponse = await cakeVaultContract.methods.userInfo(account).call();\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime,\n      lastUserActionTime: userContractResponse.lastUserActionTime,\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction).toJSON()\n    };\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null\n    };\n  }\n};\n\nexport default fetchVaultUser;","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/state/pools/fetchVaultUser.ts"],"names":["BigNumber","getCakeVaultContract","cakeVaultContract","fetchVaultUser","account","userContractResponse","methods","userInfo","call","isLoading","userShares","shares","toJSON","lastDepositedTime","lastUserActionTime","cakeAtLastUserAction","error"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,oBAAT,QAAqC,uBAArC;AAEA,MAAMC,iBAAiB,GAAGD,oBAAoB,EAA9C;;AAEA,MAAME,cAAc,GAAG,MAAOC,OAAP,IAA2B;AAChD,MAAI;AACF,UAAMC,oBAAoB,GAAG,MAAMH,iBAAiB,CAACI,OAAlB,CAA0BC,QAA1B,CAAmCH,OAAnC,EAA4CI,IAA5C,EAAnC;AACA,WAAO;AACLC,MAAAA,SAAS,EAAE,KADN;AAELC,MAAAA,UAAU,EAAE,IAAIV,SAAJ,CAAcK,oBAAoB,CAACM,MAAnC,EAA2CC,MAA3C,EAFP;AAGLC,MAAAA,iBAAiB,EAAER,oBAAoB,CAACQ,iBAHnC;AAILC,MAAAA,kBAAkB,EAAET,oBAAoB,CAACS,kBAJpC;AAKLC,MAAAA,oBAAoB,EAAE,IAAIf,SAAJ,CAAcK,oBAAoB,CAACU,oBAAnC,EAAyDH,MAAzD;AALjB,KAAP;AAOD,GATD,CASE,OAAOI,KAAP,EAAc;AACd,WAAO;AACLP,MAAAA,SAAS,EAAE,IADN;AAELC,MAAAA,UAAU,EAAE,IAFP;AAGLG,MAAAA,iBAAiB,EAAE,IAHd;AAILC,MAAAA,kBAAkB,EAAE,IAJf;AAKLC,MAAAA,oBAAoB,EAAE;AALjB,KAAP;AAOD;AACF,CAnBD;;AAqBA,eAAeZ,cAAf","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.methods.userInfo(account).call()\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime as string,\n      lastUserActionTime: userContractResponse.lastUserActionTime as string,\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n"]},"metadata":{},"sourceType":"module"}