{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/views/Farms/components/FarmCard/CardActionsContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport BigNumber from 'bignumber.js';\nimport { getAddress } from 'utils/addressHelpers';\nimport { getBep20Contract } from 'utils/contractHelpers';\nimport { Button, Flex, Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport useWeb3 from 'hooks/useWeb3';\nimport { useApprove } from 'hooks/useApprove';\nimport UnlockButton from 'components/UnlockButton';\nimport StakeAction from './StakeAction';\nimport HarvestAction from './HarvestAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Action = styled.div`\n  padding-top: 16px;\n`;\n_c = Action;\n\nconst CardActions = ({\n  farm,\n  account,\n  addLiquidityUrl\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const {\n    pid,\n    lpAddresses\n  } = farm;\n  const {\n    allowance: allowanceAsString = 0,\n    tokenBalance: tokenBalanceAsString = 0,\n    stakedBalance: stakedBalanceAsString = 0,\n    earnings: earningsAsString = 0\n  } = farm.userData || {};\n  const allowance = new BigNumber(allowanceAsString);\n  const tokenBalance = new BigNumber(tokenBalanceAsString);\n  const stakedBalance = new BigNumber(stakedBalanceAsString);\n  const earnings = new BigNumber(earningsAsString);\n  const lpAddress = getAddress(lpAddresses);\n  const lpName = farm.lpSymbol.toUpperCase();\n  const isApproved = account && allowance && allowance.isGreaterThan(0);\n  const web3 = useWeb3();\n  const lpContract = getBep20Contract(lpAddress, web3);\n  const {\n    onApprove\n  } = useApprove(lpContract);\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      await onApprove();\n      setRequestedApproval(false);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onApprove]);\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? /*#__PURE__*/_jsxDEV(StakeAction, {\n      stakedBalance: stakedBalance,\n      tokenBalance: tokenBalance,\n      tokenName: lpName,\n      pid: pid,\n      addLiquidityUrl: addLiquidityUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      mt: \"8px\",\n      width: \"100%\",\n      disabled: requestedApproval,\n      onClick: handleApprove,\n      children: t('Approve Contract')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Action, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        textTransform: \"uppercase\",\n        color: \"secondary\",\n        fontSize: \"12px\",\n        pr: \"3px\",\n        children: \"CAKE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        textTransform: \"uppercase\",\n        color: \"textSubtle\",\n        fontSize: \"12px\",\n        children: t('Earned')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HarvestAction, {\n      earnings: earnings,\n      pid: pid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        textTransform: \"uppercase\",\n        color: \"secondary\",\n        fontSize: \"12px\",\n        pr: \"3px\",\n        children: lpName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        textTransform: \"uppercase\",\n        color: \"textSubtle\",\n        fontSize: \"12px\",\n        children: t('Staked')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(UnlockButton, {\n      mt: \"8px\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }, this) : renderApprovalOrStakeButton()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardActions, \"EBCwsZvxd7rRcWrd/7/ih1pQKg0=\", false, function () {\n  return [useTranslation, useWeb3, useApprove];\n});\n\n_c2 = CardActions;\nexport default CardActions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Action\");\n$RefreshReg$(_c2, \"CardActions\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Farms/components/FarmCard/CardActionsContainer.tsx"],"names":["React","useState","useCallback","styled","BigNumber","getAddress","getBep20Contract","Button","Flex","Text","useTranslation","useWeb3","useApprove","UnlockButton","StakeAction","HarvestAction","Action","div","CardActions","farm","account","addLiquidityUrl","t","requestedApproval","setRequestedApproval","pid","lpAddresses","allowance","allowanceAsString","tokenBalance","tokenBalanceAsString","stakedBalance","stakedBalanceAsString","earnings","earningsAsString","userData","lpAddress","lpName","lpSymbol","toUpperCase","isApproved","isGreaterThan","web3","lpContract","onApprove","handleApprove","e","console","error","renderApprovalOrStakeButton"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { provider as ProviderType } from 'web3-core'\nimport BigNumber from 'bignumber.js'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport { Button, Flex, Text } from '@pancakeswap/uikit'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport useWeb3 from 'hooks/useWeb3'\nimport { useApprove } from 'hooks/useApprove'\nimport UnlockButton from 'components/UnlockButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  provider?: ProviderType\n  account?: string\n  addLiquidityUrl?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\n  const { t } = useTranslation()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = farm\n  const {\n    allowance: allowanceAsString = 0,\n    tokenBalance: tokenBalanceAsString = 0,\n    stakedBalance: stakedBalanceAsString = 0,\n    earnings: earningsAsString = 0,\n  } = farm.userData || {}\n  const allowance = new BigNumber(allowanceAsString)\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\n  const earnings = new BigNumber(earningsAsString)\n  const lpAddress = getAddress(lpAddresses)\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const web3 = useWeb3()\n\n  const lpContract = getBep20Contract(lpAddress, web3)\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={lpName}\n        pid={pid}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {t('Approve Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\n          CAKE\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n"]},"metadata":{},"sourceType":"module"}