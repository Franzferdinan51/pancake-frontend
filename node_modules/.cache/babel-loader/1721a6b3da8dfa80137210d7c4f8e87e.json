{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/views/Pools/components/PoolCard/CardActions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { BIG_ZERO } from 'utils/bigNumber';\nimport { Flex, Text, Box } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { PoolCategory } from 'config/constants/types';\nimport ApprovalAction from './ApprovalAction';\nimport StakeActions from './StakeActions';\nimport HarvestActions from './HarvestActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InlineText = styled(Text)`\n  display: inline;\n`;\n_c = InlineText;\n\nconst CardActions = ({\n  pool,\n  stakedBalance,\n  stakingTokenPrice\n}) => {\n  _s();\n\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    harvest,\n    poolCategory,\n    userData\n  } = pool; // Pools using native BNB behave differently than pools using a token\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE;\n  const {\n    t\n  } = useTranslation();\n  const allowance = (userData === null || userData === void 0 ? void 0 : userData.allowance) ? new BigNumber(userData.allowance) : BIG_ZERO;\n  const stakingTokenBalance = (userData === null || userData === void 0 ? void 0 : userData.stakingTokenBalance) ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO;\n  const earnings = (userData === null || userData === void 0 ? void 0 : userData.pendingReward) ? new BigNumber(userData.pendingReward) : BIG_ZERO;\n  const needsApproval = !allowance.gt(0) && !isBnbPool;\n  const isStaked = stakedBalance.gt(0);\n  const isLoading = !userData;\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: \"column\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      children: [harvest && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"inline\",\n          children: [/*#__PURE__*/_jsxDEV(InlineText, {\n            color: \"secondary\",\n            textTransform: \"uppercase\",\n            bold: true,\n            fontSize: \"12px\",\n            children: `${earningToken.symbol} `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InlineText, {\n            color: \"textSubtle\",\n            textTransform: \"uppercase\",\n            bold: true,\n            fontSize: \"12px\",\n            children: t(`earned`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HarvestActions, {\n          earnings: earnings,\n          earningToken: earningToken,\n          sousId: sousId,\n          isBnbPool: isBnbPool,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"inline\",\n        children: [/*#__PURE__*/_jsxDEV(InlineText, {\n          color: isStaked ? 'secondary' : 'textSubtle',\n          textTransform: \"uppercase\",\n          bold: true,\n          fontSize: \"12px\",\n          children: [isStaked ? stakingToken.symbol : t(`stake`), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InlineText, {\n          color: isStaked ? 'textSubtle' : 'secondary',\n          textTransform: \"uppercase\",\n          bold: true,\n          fontSize: \"12px\",\n          children: isStaked ? t(`staked`) : `${stakingToken.symbol}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), needsApproval ? /*#__PURE__*/_jsxDEV(ApprovalAction, {\n        pool: pool,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(StakeActions, {\n        isLoading: isLoading,\n        pool: pool,\n        stakingTokenBalance: stakingTokenBalance,\n        stakingTokenPrice: stakingTokenPrice,\n        stakedBalance: stakedBalance,\n        isBnbPool: isBnbPool,\n        isStaked: isStaked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardActions, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = CardActions;\nexport default CardActions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InlineText\");\n$RefreshReg$(_c2, \"CardActions\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Pools/components/PoolCard/CardActions/index.tsx"],"names":["BigNumber","React","styled","BIG_ZERO","Flex","Text","Box","useTranslation","PoolCategory","ApprovalAction","StakeActions","HarvestActions","InlineText","CardActions","pool","stakedBalance","stakingTokenPrice","sousId","stakingToken","earningToken","harvest","poolCategory","userData","isBnbPool","BINANCE","t","allowance","stakingTokenBalance","earnings","pendingReward","needsApproval","gt","isStaked","isLoading","symbol"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n  stakingTokenPrice: number\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance, stakingTokenPrice }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t(`earned`)}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t(`stake`)}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t(`staked`) : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakingTokenPrice={stakingTokenPrice}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n"]},"metadata":{},"sourceType":"module"}