{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/views/Predictions/components/RoundCard/CollectWinningsOverlay.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport styled from 'styled-components';\nimport { Flex, TrophyGoldIcon } from '@pancakeswap/uikit';\nimport { useBetCanClaim } from 'state/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport CollectWinningsButton from '../CollectWinningsButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled(Flex)`\n  background-color: ${({\n  theme\n}) => theme.colors.secondary};\n  left: 0;\n  position: absolute;\n  width: 100%;\n  z-index: 30;\n\n  ${({\n  isBottom\n}) => {\n  return isBottom ? `\n      border-radius: 0 0 16px 16px;\n      bottom: 0;\n    ` : `\n      top: 37px; // Card header height\n    `;\n}}\n`;\n_c = Wrapper;\n\nconst CollectWinningsOverlay = ({\n  roundId,\n  epoch,\n  payout,\n  isBottom = false,\n  ...props\n}) => {\n  _s();\n\n  const {\n    account\n  } = useWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const canClaim = useBetCanClaim(account, roundId);\n\n  if (!canClaim) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    alignItems: \"center\",\n    p: \"16px\",\n    isBottom: isBottom,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(TrophyGoldIcon, {\n      width: \"64px\",\n      style: {\n        flex: 'none'\n      },\n      mr: \"8px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CollectWinningsButton, {\n      payout: payout,\n      roundId: roundId,\n      epoch: epoch,\n      hasClaimed: false,\n      width: \"100%\",\n      children: t('Collect Winnings')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CollectWinningsOverlay, \"AePs8IEQ5mffKHbumGEZcvZQmGE=\", false, function () {\n  return [useWeb3React, useTranslation, useBetCanClaim];\n});\n\n_c2 = CollectWinningsOverlay;\nexport default CollectWinningsOverlay;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"CollectWinningsOverlay\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Predictions/components/RoundCard/CollectWinningsOverlay.tsx"],"names":["React","useWeb3React","styled","Flex","TrophyGoldIcon","useBetCanClaim","useTranslation","CollectWinningsButton","Wrapper","theme","colors","secondary","isBottom","CollectWinningsOverlay","roundId","epoch","payout","props","account","t","canClaim","flex"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,cAAf,QAAqC,oBAArC;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;;AASA,MAAMC,OAAO,GAAGN,MAAM,CAACC,IAAD,CAA8D;AACpF,sBAAsB,CAAC;AAAEM,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,SAAU;AAC5D;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAClB,SAAOA,QAAQ,GACV;AACT;AACA;AACA,KAJmB,GAKV;AACT;AACA,KAPI;AAQD,CAAC;AACJ,CAjBA;KAAMJ,O;;AAmBN,MAAMK,sBAA6D,GAAG,CAAC;AACrEC,EAAAA,OADqE;AAErEC,EAAAA,KAFqE;AAGrEC,EAAAA,MAHqE;AAIrEJ,EAAAA,QAAQ,GAAG,KAJ0D;AAKrE,KAAGK;AALkE,CAAD,KAMhE;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAcjB,YAAY,EAAhC;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAQb,cAAc,EAA5B;AACA,QAAMc,QAAQ,GAAGf,cAAc,CAACa,OAAD,EAAUJ,OAAV,CAA/B;;AAEA,MAAI,CAACM,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAED,sBACE,QAAC,OAAD;AAAS,IAAA,UAAU,EAAC,QAApB;AAA6B,IAAA,CAAC,EAAC,MAA/B;AAAsC,IAAA,QAAQ,EAAER,QAAhD;AAAA,OAA8DK,KAA9D;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAC,MAAtB;AAA6B,MAAA,KAAK,EAAE;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAApC;AAAsD,MAAA,EAAE,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,qBAAD;AAAuB,MAAA,MAAM,EAAEL,MAA/B;AAAuC,MAAA,OAAO,EAAEF,OAAhD;AAAyD,MAAA,KAAK,EAAEC,KAAhE;AAAuE,MAAA,UAAU,EAAE,KAAnF;AAA0F,MAAA,KAAK,EAAC,MAAhG;AAAA,gBACGI,CAAC,CAAC,kBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAvBD;;GAAMN,sB;UAOgBZ,Y,EACNK,c,EACGD,c;;;MATbQ,sB;AAyBN,eAAeA,sBAAf","sourcesContent":["import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Flex, TrophyGoldIcon } from '@pancakeswap/uikit'\nimport { useBetCanClaim } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport CollectWinningsButton from '../CollectWinningsButton'\n\ninterface CollectWinningsOverlayProps {\n  roundId: string\n  epoch: number\n  payout: number\n  isBottom?: boolean\n}\n\nconst Wrapper = styled(Flex)<{ isBottom: CollectWinningsOverlayProps['isBottom'] }>`\n  background-color: ${({ theme }) => theme.colors.secondary};\n  left: 0;\n  position: absolute;\n  width: 100%;\n  z-index: 30;\n\n  ${({ isBottom }) => {\n    return isBottom\n      ? `\n      border-radius: 0 0 16px 16px;\n      bottom: 0;\n    `\n      : `\n      top: 37px; // Card header height\n    `\n  }}\n`\n\nconst CollectWinningsOverlay: React.FC<CollectWinningsOverlayProps> = ({\n  roundId,\n  epoch,\n  payout,\n  isBottom = false,\n  ...props\n}) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const canClaim = useBetCanClaim(account, roundId)\n\n  if (!canClaim) {\n    return null\n  }\n\n  return (\n    <Wrapper alignItems=\"center\" p=\"16px\" isBottom={isBottom} {...props}>\n      <TrophyGoldIcon width=\"64px\" style={{ flex: 'none' }} mr=\"8px\" />\n      <CollectWinningsButton payout={payout} roundId={roundId} epoch={epoch} hasClaimed={false} width=\"100%\">\n        {t('Collect Winnings')}\n      </CollectWinningsButton>\n    </Wrapper>\n  )\n}\n\nexport default CollectWinningsOverlay\n"]},"metadata":{},"sourceType":"module"}