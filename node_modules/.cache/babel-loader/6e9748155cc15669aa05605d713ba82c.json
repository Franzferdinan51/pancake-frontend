{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Text, Input, Button } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`;\n_c = Wrapper;\nconst SearchWrapper = styled.div`\n  position: relative;\n`;\n_c2 = SearchWrapper;\nconst InputWrapper = styled.div`\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`;\n_c3 = InputWrapper;\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`;\n_c4 = ButtonWrapper;\n\nconst PastLotterySearcher = ({\n  initialLotteryNumber,\n  onSubmit\n}) => {\n  _s();\n\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber);\n  const [isError, setIsError] = useState(false);\n  const {\n    t\n  } = useTranslation();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit(lotteryNumber);\n  };\n\n  const handleChange = evt => {\n    if (evt.currentTarget.value) {\n      const value = parseInt(evt.currentTarget.value, 10); // The max value will always be the initialLotteryNumber which equals\n      // the latest lottery round\n\n      setIsError(value > initialLotteryNumber);\n      setLotteryNumber(value);\n    } else {\n      setLotteryNumber(initialLotteryNumber);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: t('Select lottery number:')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(SearchWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(InputWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: lotteryNumber,\n            type: \"number\",\n            inputMode: \"numeric\",\n            min: \"0\",\n            isWarning: isError,\n            max: initialLotteryNumber,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            scale: \"sm\",\n            disabled: isError,\n            children: t('Search')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PastLotterySearcher, \"LBR31fnYnXUGYQmfVi7m8+29dJE=\", false, function () {\n  return [useTranslation];\n});\n\n_c5 = PastLotterySearcher;\nexport default PastLotterySearcher;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"SearchWrapper\");\n$RefreshReg$(_c3, \"InputWrapper\");\n$RefreshReg$(_c4, \"ButtonWrapper\");\n$RefreshReg$(_c5, \"PastLotterySearcher\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx"],"names":["React","useState","styled","Text","Input","Button","useTranslation","Wrapper","div","SearchWrapper","InputWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","lotteryNumber","setLotteryNumber","isError","setIsError","t","handleSubmit","evt","preventDefault","handleChange","currentTarget","value","parseInt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,oBAApC;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAOA,MAAMC,OAAO,GAAGL,MAAM,CAACM,GAAI;AAC3B;AACA,CAFA;KAAMD,O;AAIN,MAAME,aAAa,GAAGP,MAAM,CAACM,GAAI;AACjC;AACA,CAFA;MAAMC,a;AAGN,MAAMC,YAAY,GAAGR,MAAM,CAACM,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAME,Y;AAYN,MAAMC,aAAa,GAAGT,MAAM,CAACM,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMG,a;;AAQN,MAAMC,mBAAuD,GAAG,CAAC;AAAEC,EAAAA,oBAAF;AAAwBC,EAAAA;AAAxB,CAAD,KAAwC;AAAA;;AACtG,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAACY,oBAAD,CAAlD;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAQb,cAAc,EAA5B;;AAEA,QAAMc,YAAY,GAAIC,GAAD,IAA2C;AAC9DA,IAAAA,GAAG,CAACC,cAAJ;AACAR,IAAAA,QAAQ,CAACC,aAAD,CAAR;AACD,GAHD;;AAKA,QAAMQ,YAAY,GAAIF,GAAD,IAA8C;AACjE,QAAIA,GAAG,CAACG,aAAJ,CAAkBC,KAAtB,EAA6B;AAC3B,YAAMA,KAAK,GAAGC,QAAQ,CAACL,GAAG,CAACG,aAAJ,CAAkBC,KAAnB,EAA0B,EAA1B,CAAtB,CAD2B,CAG3B;AACA;;AACAP,MAAAA,UAAU,CAACO,KAAK,GAAGZ,oBAAT,CAAV;AACAG,MAAAA,gBAAgB,CAACS,KAAD,CAAhB;AACD,KAPD,MAOO;AACLT,MAAAA,gBAAgB,CAACH,oBAAD,CAAhB;AACD;AACF,GAXD;;AAaA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,IAAD;AAAA,gBAAOM,CAAC,CAAC,wBAAD;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA,6BACE,QAAC,aAAD;AAAA,gCACE,QAAC,YAAD;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,KAAK,EAAEL,aADT;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,SAAS,EAAC,SAHZ;AAIE,YAAA,GAAG,EAAC,GAJN;AAKE,YAAA,SAAS,EAAEE,OALb;AAME,YAAA,GAAG,EAAEJ,oBANP;AAOE,YAAA,QAAQ,EAAEU;AAPZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,aAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAC,IAA5B;AAAiC,YAAA,QAAQ,EAAEN,OAA3C;AAAA,sBACGE,CAAC,CAAC,QAAD;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAhDD;;GAAMP,mB;UAGUN,c;;;MAHVM,mB;AAkDN,eAAeA,mBAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\nconst InputWrapper = styled.div`\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const { t } = useTranslation()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    if (evt.currentTarget.value) {\n      const value = parseInt(evt.currentTarget.value, 10)\n\n      // The max value will always be the initialLotteryNumber which equals\n      // the latest lottery round\n      setIsError(value > initialLotteryNumber)\n      setLotteryNumber(value)\n    } else {\n      setLotteryNumber(initialLotteryNumber)\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Text>{t('Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <InputWrapper>\n            <Input\n              value={lotteryNumber}\n              type=\"number\"\n              inputMode=\"numeric\"\n              min=\"0\"\n              isWarning={isError}\n              max={initialLotteryNumber}\n              onChange={handleChange}\n            />\n          </InputWrapper>\n          <ButtonWrapper>\n            <Button type=\"submit\" scale=\"sm\" disabled={isError}>\n              {t('Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n"]},"metadata":{},"sourceType":"module"}