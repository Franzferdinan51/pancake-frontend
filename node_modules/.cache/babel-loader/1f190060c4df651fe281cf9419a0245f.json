{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/views/Predictions/components/RoundCard/LiveRoundCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useCountUp } from 'react-countup';\nimport { CardBody, Flex, PlayCircleOutlineIcon, Skeleton, Text, TooltipText, useTooltip } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { BetPosition } from 'state/types';\nimport { useBlock, useGetIntervalBlocks, useGetLastOraclePrice } from 'state/hooks';\nimport BlockProgress from 'components/BlockProgress';\nimport { formatUsd, getBubbleGumBackground } from '../../helpers';\nimport PositionTag from '../PositionTag';\nimport { RoundResultBox, LockPriceRow, PrizePoolRow } from '../RoundResult';\nimport MultiplierArrow from './MultiplierArrow';\nimport Card from './Card';\nimport CardHeader from './CardHeader';\nimport CanceledRoundCard from './CanceledRoundCard';\nimport CalculatingCard from './CalculatingCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GradientBorder = styled.div`\n  background: linear-gradient(180deg, #53dee9 0%, #7645d9 100%);\n  border-radius: 16px;\n  padding: 1px;\n`;\n_c = GradientBorder;\nconst GradientCard = styled(Card)`\n  background: ${({\n  theme\n}) => getBubbleGumBackground(theme)};\n`;\n_c2 = GradientCard;\n\nconst LiveRoundCard = ({\n  round,\n  betAmount,\n  hasEnteredUp,\n  hasEnteredDown,\n  bullMultiplier,\n  bearMultiplier\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    lockPrice,\n    lockBlock,\n    totalAmount\n  } = round;\n  const {\n    currentBlock\n  } = useBlock();\n  const totalInterval = useGetIntervalBlocks();\n  const price = useGetLastOraclePrice();\n  const isBull = price.gt(lockPrice);\n  const priceColor = isBull ? 'success' : 'failure';\n  const estimatedEndBlock = lockBlock + totalInterval;\n  const priceDifference = price.minus(lockPrice).toNumber();\n  const {\n    countUp,\n    update\n  } = useCountUp({\n    start: 0,\n    end: price.toNumber(),\n    duration: 1,\n    decimals: 3\n  });\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(t('Last price from Chainlink Oracle'), {\n    placement: 'bottom'\n  });\n  useEffect(() => {\n    update(price.toNumber());\n  }, [price, update]);\n\n  if (round.failed) {\n    return /*#__PURE__*/_jsxDEV(CanceledRoundCard, {\n      round: round\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (currentBlock > estimatedEndBlock) {\n    return /*#__PURE__*/_jsxDEV(CalculatingCard, {\n      round: round\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(GradientBorder, {\n    children: [/*#__PURE__*/_jsxDEV(GradientCard, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        status: \"live\",\n        icon: /*#__PURE__*/_jsxDEV(PlayCircleOutlineIcon, {\n          mr: \"4px\",\n          width: \"24px\",\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this),\n        title: t('Live'),\n        epoch: round.epoch,\n        blockNumber: estimatedEndBlock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlockProgress, {\n        variant: \"flat\",\n        scale: \"sm\",\n        startBlock: lockBlock,\n        endBlock: estimatedEndBlock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        p: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(MultiplierArrow, {\n          betAmount: betAmount,\n          multiplier: bullMultiplier,\n          hasEntered: hasEnteredUp,\n          isActive: isBull\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoundResultBox, {\n          betPosition: isBull ? BetPosition.BULL : BetPosition.BEAR,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            color: \"textSubtle\",\n            fontSize: \"12px\",\n            bold: true,\n            textTransform: \"uppercase\",\n            mb: \"8px\",\n            children: t('Last Price')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            mb: \"16px\",\n            height: \"36px\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              ref: targetRef,\n              children: /*#__PURE__*/_jsxDEV(TooltipText, {\n                bold: true,\n                color: priceColor,\n                fontSize: \"24px\",\n                style: {\n                  minHeight: '36px'\n                },\n                children: price.gt(0) ? `$${countUp}` : /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: \"36px\",\n                  width: \"94px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 50\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PositionTag, {\n              betPosition: isBull ? BetPosition.BULL : BetPosition.BEAR,\n              children: formatUsd(priceDifference)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), lockPrice && /*#__PURE__*/_jsxDEV(LockPriceRow, {\n            lockPrice: lockPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(PrizePoolRow, {\n            totalAmount: totalAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MultiplierArrow, {\n          betAmount: betAmount,\n          multiplier: bearMultiplier,\n          betPosition: BetPosition.BEAR,\n          hasEntered: hasEnteredDown,\n          isActive: !isBull\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), tooltipVisible && tooltip]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LiveRoundCard, \"HFlpVrdkyF8Jjx0BDPkV7vcYRNc=\", false, function () {\n  return [useTranslation, useBlock, useGetIntervalBlocks, useGetLastOraclePrice, useCountUp, useTooltip];\n});\n\n_c3 = LiveRoundCard;\nexport default LiveRoundCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GradientBorder\");\n$RefreshReg$(_c2, \"GradientCard\");\n$RefreshReg$(_c3, \"LiveRoundCard\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Predictions/components/RoundCard/LiveRoundCard.tsx"],"names":["React","useEffect","styled","useCountUp","CardBody","Flex","PlayCircleOutlineIcon","Skeleton","Text","TooltipText","useTooltip","useTranslation","BetPosition","useBlock","useGetIntervalBlocks","useGetLastOraclePrice","BlockProgress","formatUsd","getBubbleGumBackground","PositionTag","RoundResultBox","LockPriceRow","PrizePoolRow","MultiplierArrow","Card","CardHeader","CanceledRoundCard","CalculatingCard","GradientBorder","div","GradientCard","theme","LiveRoundCard","round","betAmount","hasEnteredUp","hasEnteredDown","bullMultiplier","bearMultiplier","t","lockPrice","lockBlock","totalAmount","currentBlock","totalInterval","price","isBull","gt","priceColor","estimatedEndBlock","priceDifference","minus","toNumber","countUp","update","start","end","duration","decimals","targetRef","tooltip","tooltipVisible","placement","failed","epoch","BULL","BEAR","minHeight"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useCountUp } from 'react-countup'\nimport { CardBody, Flex, PlayCircleOutlineIcon, Skeleton, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Round, BetPosition } from 'state/types'\nimport { useBlock, useGetIntervalBlocks, useGetLastOraclePrice } from 'state/hooks'\nimport BlockProgress from 'components/BlockProgress'\nimport { formatUsd, getBubbleGumBackground } from '../../helpers'\nimport PositionTag from '../PositionTag'\nimport { RoundResultBox, LockPriceRow, PrizePoolRow } from '../RoundResult'\nimport MultiplierArrow from './MultiplierArrow'\nimport Card from './Card'\nimport CardHeader from './CardHeader'\nimport CanceledRoundCard from './CanceledRoundCard'\nimport CalculatingCard from './CalculatingCard'\n\ninterface LiveRoundCardProps {\n  round: Round\n  betAmount?: number\n  hasEnteredUp: boolean\n  hasEnteredDown: boolean\n  bullMultiplier: number\n  bearMultiplier: number\n}\n\nconst GradientBorder = styled.div`\n  background: linear-gradient(180deg, #53dee9 0%, #7645d9 100%);\n  border-radius: 16px;\n  padding: 1px;\n`\n\nconst GradientCard = styled(Card)`\n  background: ${({ theme }) => getBubbleGumBackground(theme)};\n`\n\nconst LiveRoundCard: React.FC<LiveRoundCardProps> = ({\n  round,\n  betAmount,\n  hasEnteredUp,\n  hasEnteredDown,\n  bullMultiplier,\n  bearMultiplier,\n}) => {\n  const { t } = useTranslation()\n  const { lockPrice, lockBlock, totalAmount } = round\n  const { currentBlock } = useBlock()\n  const totalInterval = useGetIntervalBlocks()\n  const price = useGetLastOraclePrice()\n  const isBull = price.gt(lockPrice)\n  const priceColor = isBull ? 'success' : 'failure'\n  const estimatedEndBlock = lockBlock + totalInterval\n  const priceDifference = price.minus(lockPrice).toNumber()\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: price.toNumber(),\n    duration: 1,\n    decimals: 3,\n  })\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(t('Last price from Chainlink Oracle'), {\n    placement: 'bottom',\n  })\n\n  useEffect(() => {\n    update(price.toNumber())\n  }, [price, update])\n\n  if (round.failed) {\n    return <CanceledRoundCard round={round} />\n  }\n\n  if (currentBlock > estimatedEndBlock) {\n    return <CalculatingCard round={round} />\n  }\n\n  return (\n    <GradientBorder>\n      <GradientCard>\n        <CardHeader\n          status=\"live\"\n          icon={<PlayCircleOutlineIcon mr=\"4px\" width=\"24px\" color=\"secondary\" />}\n          title={t('Live')}\n          epoch={round.epoch}\n          blockNumber={estimatedEndBlock}\n        />\n        <BlockProgress variant=\"flat\" scale=\"sm\" startBlock={lockBlock} endBlock={estimatedEndBlock} />\n        <CardBody p=\"16px\">\n          <MultiplierArrow\n            betAmount={betAmount}\n            multiplier={bullMultiplier}\n            hasEntered={hasEnteredUp}\n            isActive={isBull}\n          />\n          <RoundResultBox betPosition={isBull ? BetPosition.BULL : BetPosition.BEAR}>\n            <Text color=\"textSubtle\" fontSize=\"12px\" bold textTransform=\"uppercase\" mb=\"8px\">\n              {t('Last Price')}\n            </Text>\n            <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\" height=\"36px\">\n              <div ref={targetRef}>\n                <TooltipText bold color={priceColor} fontSize=\"24px\" style={{ minHeight: '36px' }}>\n                  {price.gt(0) ? `$${countUp}` : <Skeleton height=\"36px\" width=\"94px\" />}\n                </TooltipText>\n              </div>\n              <PositionTag betPosition={isBull ? BetPosition.BULL : BetPosition.BEAR}>\n                {formatUsd(priceDifference)}\n              </PositionTag>\n            </Flex>\n            {lockPrice && <LockPriceRow lockPrice={lockPrice} />}\n            <PrizePoolRow totalAmount={totalAmount} />\n          </RoundResultBox>\n          <MultiplierArrow\n            betAmount={betAmount}\n            multiplier={bearMultiplier}\n            betPosition={BetPosition.BEAR}\n            hasEntered={hasEnteredDown}\n            isActive={!isBull}\n          />\n        </CardBody>\n      </GradientCard>\n      {tooltipVisible && tooltip}\n    </GradientBorder>\n  )\n}\n\nexport default LiveRoundCard\n"]},"metadata":{},"sourceType":"module"}