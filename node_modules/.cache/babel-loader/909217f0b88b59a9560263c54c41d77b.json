{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/views/Home/components/CakeHarvestBalance.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport BigNumber from 'bignumber.js';\nimport { useTranslation } from 'contexts/Localization';\nimport useAllEarnings from 'hooks/useAllEarnings';\nimport { usePriceCakeBusd } from 'state/hooks';\nimport styled from 'styled-components';\nimport { DEFAULT_TOKEN_DECIMAL } from 'config';\nimport CardValue from './CardValue';\nimport CardBusdValue from './CardBusdValue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Block = styled.div`\n  margin-bottom: 24px;\n`;\n_c = Block;\n\nconst CakeHarvestBalance = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const allEarnings = useAllEarnings();\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    const earningNumber = new BigNumber(earning);\n\n    if (earningNumber.eq(0)) {\n      return accum;\n    }\n\n    return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber();\n  }, 0);\n  const cakePriceBusd = usePriceCakeBusd();\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(cakePriceBusd).toNumber();\n\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(Text, {\n      color: \"textDisabled\",\n      style: {\n        lineHeight: '76px'\n      },\n      children: t('Locked')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Block, {\n    children: [/*#__PURE__*/_jsxDEV(CardValue, {\n      value: earningsSum,\n      lineHeight: \"1.5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), !cakePriceBusd.eq(0) && /*#__PURE__*/_jsxDEV(CardBusdValue, {\n      value: earningsBusd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CakeHarvestBalance, \"J0mJGm8W8aUsiCRhxAVvecyqcUo=\", false, function () {\n  return [useTranslation, useWeb3React, useAllEarnings, usePriceCakeBusd];\n});\n\n_c2 = CakeHarvestBalance;\nexport default CakeHarvestBalance;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Block\");\n$RefreshReg$(_c2, \"CakeHarvestBalance\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Home/components/CakeHarvestBalance.tsx"],"names":["React","Text","useWeb3React","BigNumber","useTranslation","useAllEarnings","usePriceCakeBusd","styled","DEFAULT_TOKEN_DECIMAL","CardValue","CardBusdValue","Block","div","CakeHarvestBalance","t","account","allEarnings","earningsSum","reduce","accum","earning","earningNumber","eq","toNumber","cakePriceBusd","earningsBusd","multipliedBy","lineHeight"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,qBAAT,QAAsC,QAAtC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,KAAK,GAAGJ,MAAM,CAACK,GAAI;AACzB;AACA,CAFA;KAAMD,K;;AAIN,MAAME,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAQV,cAAc,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAcb,YAAY,EAAhC;AACA,QAAMc,WAAW,GAAGX,cAAc,EAAlC;AACA,QAAMY,WAAW,GAAGD,WAAW,CAACE,MAAZ,CAAmB,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACzD,UAAMC,aAAa,GAAG,IAAIlB,SAAJ,CAAciB,OAAd,CAAtB;;AACA,QAAIC,aAAa,CAACC,EAAd,CAAiB,CAAjB,CAAJ,EAAyB;AACvB,aAAOH,KAAP;AACD;;AACD,WAAOA,KAAK,GAAGE,aAAa,CAACT,GAAd,CAAkBJ,qBAAlB,EAAyCe,QAAzC,EAAf;AACD,GANmB,EAMjB,CANiB,CAApB;AAOA,QAAMC,aAAa,GAAGlB,gBAAgB,EAAtC;AACA,QAAMmB,YAAY,GAAG,IAAItB,SAAJ,CAAcc,WAAd,EAA2BS,YAA3B,CAAwCF,aAAxC,EAAuDD,QAAvD,EAArB;;AAEA,MAAI,CAACR,OAAL,EAAc;AACZ,wBACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,cAAZ;AAA2B,MAAA,KAAK,EAAE;AAAEY,QAAAA,UAAU,EAAE;AAAd,OAAlC;AAAA,gBACGb,CAAC,CAAC,QAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,KAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEG,WAAlB;AAA+B,MAAA,UAAU,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACO,aAAa,CAACF,EAAd,CAAiB,CAAjB,CAAD,iBAAwB,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEG;AAAtB;AAAA;AAAA;AAAA;AAAA,YAF3B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA5BD;;GAAMZ,kB;UACUT,c,EACMF,Y,EACAG,c,EAQEC,gB;;;MAXlBO,kB;AA8BN,eAAeA,kBAAf","sourcesContent":["import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport useAllEarnings from 'hooks/useAllEarnings'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport styled from 'styled-components'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst Block = styled.div`\n  margin-bottom: 24px;\n`\n\nconst CakeHarvestBalance = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const allEarnings = useAllEarnings()\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    const earningNumber = new BigNumber(earning)\n    if (earningNumber.eq(0)) {\n      return accum\n    }\n    return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\n  }, 0)\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(cakePriceBusd).toNumber()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '76px' }}>\n        {t('Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <Block>\n      <CardValue value={earningsSum} lineHeight=\"1.5\" />\n      {!cakePriceBusd.eq(0) && <CardBusdValue value={earningsBusd} />}\n    </Block>\n  )\n}\n\nexport default CakeHarvestBalance\n"]},"metadata":{},"sourceType":"module"}