{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/components/Timer/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Flex, Heading, Text, Link, useTooltip } from '@pancakeswap/uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTimerFlex = styled(Flex)`\n  ${({\n  theme,\n  showTooltip\n}) => showTooltip ? ` border-bottom: 1px dashed ${theme.colors.textSubtle};` : ``}\n  div:last-of-type {\n    margin-right: 0;\n  }\n`;\n_c = StyledTimerFlex;\n\nconst Timer = ({\n  minutes,\n  hours,\n  days,\n  showTooltip,\n  HeadingTextComponent,\n  BodyTextComponent\n}) => {\n  return /*#__PURE__*/_jsxDEV(StyledTimerFlex, {\n    alignItems: \"flex-end\",\n    showTooltip: showTooltip,\n    children: [/*#__PURE__*/_jsxDEV(HeadingTextComponent, {\n      mr: \"2px\",\n      children: days\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BodyTextComponent, {\n      mr: \"16px\",\n      children: \"d\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeadingTextComponent, {\n      mr: \"2px\",\n      children: hours\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BodyTextComponent, {\n      mr: \"16px\",\n      children: \"h\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeadingTextComponent, {\n      mr: \"2px\",\n      children: minutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BodyTextComponent, {\n      children: \"m\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Timer;\n\nconst DefaultHeadingTextComponent = ({\n  children,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(Heading, {\n  scale: \"lg\",\n  ...props,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 3\n}, this);\n\n_c3 = DefaultHeadingTextComponent;\n\nconst DefaultBodyTextComponent = ({\n  children,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(Text, {\n  fontSize: \"16px\",\n  fontWeight: \"600\",\n  ...props,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 3\n}, this);\n\n_c4 = DefaultBodyTextComponent;\n\nconst TooltipContent = ({\n  blockNumber\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Text, {\n    color: \"body\",\n    mb: \"10px\",\n    fontWeight: \"600\",\n    children: [\"Block \", blockNumber]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Link, {\n    external: true,\n    href: `https://bscscan.com/block/${blockNumber}`,\n    children: \"View on BscScan\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\n_c5 = TooltipContent;\n\nconst Wrapper = ({\n  timerStage,\n  minutes,\n  hours,\n  days,\n  blockNumber,\n  showTooltip = false,\n  HeadingTextComponent = DefaultHeadingTextComponent,\n  BodyTextComponent = DefaultBodyTextComponent\n}) => {\n  _s();\n\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(TooltipContent, {\n    blockNumber: blockNumber\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 61\n  }, this), {\n    placement: 'bottom'\n  });\n  const shouldDisplayTooltip = showTooltip && tooltipVisible;\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    alignItems: \"flex-end\",\n    position: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(BodyTextComponent, {\n      mr: \"16px\",\n      children: timerStage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: targetRef,\n      children: [/*#__PURE__*/_jsxDEV(Timer, {\n        minutes: minutes,\n        hours: hours,\n        days: days,\n        HeadingTextComponent: HeadingTextComponent,\n        BodyTextComponent: BodyTextComponent,\n        showTooltip: showTooltip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), shouldDisplayTooltip && tooltip]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Wrapper, \"QagSv4p4LHEK6sXLC8HGkUoRCVM=\", false, function () {\n  return [useTooltip];\n});\n\n_c6 = Wrapper;\nexport default Wrapper;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StyledTimerFlex\");\n$RefreshReg$(_c2, \"Timer\");\n$RefreshReg$(_c3, \"DefaultHeadingTextComponent\");\n$RefreshReg$(_c4, \"DefaultBodyTextComponent\");\n$RefreshReg$(_c5, \"TooltipContent\");\n$RefreshReg$(_c6, \"Wrapper\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/components/Timer/index.tsx"],"names":["React","styled","Flex","Heading","Text","Link","useTooltip","StyledTimerFlex","theme","showTooltip","colors","textSubtle","Timer","minutes","hours","days","HeadingTextComponent","BodyTextComponent","DefaultHeadingTextComponent","children","props","DefaultBodyTextComponent","TooltipContent","blockNumber","Wrapper","timerStage","targetRef","tooltip","tooltipVisible","placement","shouldDisplayTooltip"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text, Link, useTooltip } from '@pancakeswap/uikit'\n\nexport interface TimerProps {\n  timerStage?: string\n  minutes?: number\n  hours?: number\n  days?: number\n  showTooltip?: boolean\n  blockNumber?: number\n  HeadingTextComponent?: React.ElementType\n  BodyTextComponent?: React.ElementType\n}\n\nconst StyledTimerFlex = styled(Flex)<{ showTooltip?: boolean }>`\n  ${({ theme, showTooltip }) => (showTooltip ? ` border-bottom: 1px dashed ${theme.colors.textSubtle};` : ``)}\n  div:last-of-type {\n    margin-right: 0;\n  }\n`\n\nconst Timer = ({ minutes, hours, days, showTooltip, HeadingTextComponent, BodyTextComponent }) => {\n  return (\n    <StyledTimerFlex alignItems=\"flex-end\" showTooltip={showTooltip}>\n      <HeadingTextComponent mr=\"2px\">{days}</HeadingTextComponent>\n      <BodyTextComponent mr=\"16px\">d</BodyTextComponent>\n      <HeadingTextComponent mr=\"2px\">{hours}</HeadingTextComponent>\n      <BodyTextComponent mr=\"16px\">h</BodyTextComponent>\n      <HeadingTextComponent mr=\"2px\">{minutes}</HeadingTextComponent>\n      <BodyTextComponent>m</BodyTextComponent>\n    </StyledTimerFlex>\n  )\n}\n\nconst DefaultHeadingTextComponent = ({ children, ...props }) => (\n  <Heading scale=\"lg\" {...props}>\n    {children}\n  </Heading>\n)\nconst DefaultBodyTextComponent = ({ children, ...props }) => (\n  <Text fontSize=\"16px\" fontWeight=\"600\" {...props}>\n    {children}\n  </Text>\n)\n\nconst TooltipContent = ({ blockNumber }) => (\n  <>\n    <Text color=\"body\" mb=\"10px\" fontWeight=\"600\">\n      Block {blockNumber}\n    </Text>\n    <Link external href={`https://bscscan.com/block/${blockNumber}`}>\n      View on BscScan\n    </Link>\n  </>\n)\n\nconst Wrapper: React.FC<TimerProps> = ({\n  timerStage,\n  minutes,\n  hours,\n  days,\n  blockNumber,\n  showTooltip = false,\n  HeadingTextComponent = DefaultHeadingTextComponent,\n  BodyTextComponent = DefaultBodyTextComponent,\n}) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipContent blockNumber={blockNumber} />, {\n    placement: 'bottom',\n  })\n  const shouldDisplayTooltip = showTooltip && tooltipVisible\n  return (\n    <Flex alignItems=\"flex-end\" position=\"relative\">\n      <BodyTextComponent mr=\"16px\">{timerStage}</BodyTextComponent>\n      <div ref={targetRef}>\n        <Timer\n          minutes={minutes}\n          hours={hours}\n          days={days}\n          HeadingTextComponent={HeadingTextComponent}\n          BodyTextComponent={BodyTextComponent}\n          showTooltip={showTooltip}\n        />\n        {shouldDisplayTooltip && tooltip}\n      </div>\n    </Flex>\n  )\n}\n\nexport default Wrapper\n"]},"metadata":{},"sourceType":"module"}