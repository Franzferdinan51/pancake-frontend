{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/IfoCardTokens.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text, Flex, Box, Image, CheckmarkCircleIcon, HelpIcon, useTooltip } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { useTranslation } from 'contexts/Localization';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport PercentageOfTotal from './PercentageOfTotal';\nimport { SkeletonCardTokens } from './Skeletons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TokenSection = ({\n  img,\n  children,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(Flex, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      src: img,\n      width: 32,\n      height: 32,\n      mr: \"16px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TokenSection;\n\nconst Label = props => /*#__PURE__*/_jsxDEV(Text, {\n  bold: true,\n  fontSize: \"12px\",\n  color: \"secondary\",\n  textTransform: \"uppercase\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 26\n}, this);\n\n_c2 = Label;\n\nconst Value = props => /*#__PURE__*/_jsxDEV(Text, {\n  bold: true,\n  fontSize: \"20px\",\n  style: {\n    wordBreak: 'break-all'\n  },\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 26\n}, this);\n\n_c3 = Value;\n\nconst IfoCardTokens = ({\n  poolId,\n  ifo,\n  publicIfoData,\n  walletIfoData,\n  hasProfile,\n  isLoading\n}) => {\n  _s();\n\n  const {\n    account\n  } = useWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(t('Sorry, you didn’t contribute enough LP tokens to meet the minimum threshold. You didn’t buy anything in this sale, but you can still reclaim your LP tokens.'), {\n    placement: 'bottom'\n  });\n  const publicPoolCharacteristics = publicIfoData[poolId];\n  const userPoolCharacteristics = walletIfoData[poolId];\n  const {\n    currency,\n    token\n  } = ifo;\n  const {\n    hasClaimed\n  } = userPoolCharacteristics;\n  const distributionRatio = ifo[poolId].distributionRatio * 100;\n  const tokenImage = `/images/tokens/${ifo.token.symbol.toLowerCase()}.png`;\n\n  const renderTokenSection = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(SkeletonCardTokens, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (account && !hasProfile) {\n      return /*#__PURE__*/_jsxDEV(Text, {\n        textAlign: \"center\",\n        children: t('You need an active PancakeSwap Profile to take part in an IFO!')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (publicIfoData.status === 'coming_soon') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TokenSection, {\n          img: \"/images/bunny-placeholder.svg\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: t('On sale')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Value, {\n            children: ifo[poolId].saleAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          color: \"textSubtle\",\n          pl: \"48px\",\n          children: `${distributionRatio}% of total sale`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    if (publicIfoData.status === 'live') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TokenSection, {\n          img: \"/images/farms/cake-bnb.svg\",\n          mb: \"24px\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: `Your ${currency.symbol} committed`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Value, {\n            children: getBalanceNumber(userPoolCharacteristics.amountTokenCommittedInLP, currency.decimals)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PercentageOfTotal, {\n            userAmount: userPoolCharacteristics.amountTokenCommittedInLP,\n            totalAmount: publicPoolCharacteristics.totalAmountPool\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TokenSection, {\n          img: tokenImage,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: `${token.symbol} to receive`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Value, {\n            children: getBalanceNumber(userPoolCharacteristics.offeringAmountInToken, token.decimals)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    if (publicIfoData.status === 'finished') {\n      return userPoolCharacteristics.amountTokenCommittedInLP.isEqualTo(0) ? /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: \"/images/bunny-placeholder.svg\",\n          width: 80,\n          height: 80,\n          mb: \"16px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: t('You didn’t participate in this sale!')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TokenSection, {\n          img: \"/images/farms/cake-bnb.svg\",\n          mb: \"24px\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: hasClaimed ? `Your ${currency.symbol} RECLAIMED` : `Your ${currency.symbol} TO RECLAIM`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Value, {\n              children: getBalanceNumber(userPoolCharacteristics.refundingAmountInLP, currency.decimals)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), hasClaimed && /*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {\n              color: \"success\",\n              ml: \"8px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PercentageOfTotal, {\n            userAmount: userPoolCharacteristics.amountTokenCommittedInLP,\n            totalAmount: publicPoolCharacteristics.totalAmountPool\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TokenSection, {\n          img: tokenImage,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: hasClaimed ? `${token.symbol} received` : `${token.symbol} to received`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Value, {\n              children: getBalanceNumber(userPoolCharacteristics.offeringAmountInToken, token.decimals)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), !hasClaimed && userPoolCharacteristics.offeringAmountInToken.isEqualTo(0) && /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: targetRef,\n              style: {\n                display: 'flex',\n                marginLeft: '8px'\n              },\n              children: /*#__PURE__*/_jsxDEV(HelpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), hasClaimed && /*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {\n              color: \"success\",\n              ml: \"8px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    pb: \"24px\",\n    children: [tooltipVisible && tooltip, renderTokenSection()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IfoCardTokens, \"FN0eu8QX6iHbx6Qr9muq+WVK/18=\", false, function () {\n  return [useWeb3React, useTranslation, useTooltip];\n});\n\n_c4 = IfoCardTokens;\nexport default IfoCardTokens;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TokenSection\");\n$RefreshReg$(_c2, \"Label\");\n$RefreshReg$(_c3, \"Value\");\n$RefreshReg$(_c4, \"IfoCardTokens\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/IfoCardTokens.tsx"],"names":["React","Text","Flex","Box","Image","CheckmarkCircleIcon","HelpIcon","useTooltip","useWeb3React","useTranslation","getBalanceNumber","PercentageOfTotal","SkeletonCardTokens","TokenSection","img","children","props","Label","Value","wordBreak","IfoCardTokens","poolId","ifo","publicIfoData","walletIfoData","hasProfile","isLoading","account","t","targetRef","tooltip","tooltipVisible","placement","publicPoolCharacteristics","userPoolCharacteristics","currency","token","hasClaimed","distributionRatio","tokenImage","symbol","toLowerCase","renderTokenSection","status","saleAmount","amountTokenCommittedInLP","decimals","totalAmountPool","offeringAmountInToken","isEqualTo","refundingAmountInLP","display","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Text, Flex, Box, Image, CheckmarkCircleIcon, FlexProps, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Ifo, PoolIds } from 'config/constants/types'\nimport { PublicIfoData, WalletIfoData } from 'hooks/ifo/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport PercentageOfTotal from './PercentageOfTotal'\nimport { SkeletonCardTokens } from './Skeletons'\n\ninterface TokenSectionProps extends FlexProps {\n  img: string\n}\n\nconst TokenSection: React.FC<TokenSectionProps> = ({ img, children, ...props }) => {\n  return (\n    <Flex {...props}>\n      <Image src={img} width={32} height={32} mr=\"16px\" />\n      <div>{children}</div>\n    </Flex>\n  )\n}\n\nconst Label = (props) => <Text bold fontSize=\"12px\" color=\"secondary\" textTransform=\"uppercase\" {...props} />\n\nconst Value = (props) => <Text bold fontSize=\"20px\" style={{ wordBreak: 'break-all' }} {...props} />\n\ninterface IfoCardTokensProps {\n  poolId: PoolIds\n  ifo: Ifo\n  publicIfoData: PublicIfoData\n  walletIfoData: WalletIfoData\n  hasProfile: boolean\n  isLoading: boolean\n}\n\nconst IfoCardTokens: React.FC<IfoCardTokensProps> = ({\n  poolId,\n  ifo,\n  publicIfoData,\n  walletIfoData,\n  hasProfile,\n  isLoading,\n}) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\n      'Sorry, you didn’t contribute enough LP tokens to meet the minimum threshold. You didn’t buy anything in this sale, but you can still reclaim your LP tokens.',\n    ),\n    { placement: 'bottom' },\n  )\n\n  const publicPoolCharacteristics = publicIfoData[poolId]\n  const userPoolCharacteristics = walletIfoData[poolId]\n\n  const { currency, token } = ifo\n  const { hasClaimed } = userPoolCharacteristics\n  const distributionRatio = ifo[poolId].distributionRatio * 100\n  const tokenImage = `/images/tokens/${ifo.token.symbol.toLowerCase()}.png`\n\n  const renderTokenSection = () => {\n    if (isLoading) {\n      return <SkeletonCardTokens />\n    }\n    if (account && !hasProfile) {\n      return <Text textAlign=\"center\">{t('You need an active PancakeSwap Profile to take part in an IFO!')}</Text>\n    }\n    if (publicIfoData.status === 'coming_soon') {\n      return (\n        <>\n          <TokenSection img=\"/images/bunny-placeholder.svg\">\n            <Label>{t('On sale')}</Label>\n            <Value>{ifo[poolId].saleAmount}</Value>\n          </TokenSection>\n          <Text fontSize=\"14px\" color=\"textSubtle\" pl=\"48px\">{`${distributionRatio}% of total sale`}</Text>\n        </>\n      )\n    }\n    if (publicIfoData.status === 'live') {\n      return (\n        <>\n          <TokenSection img=\"/images/farms/cake-bnb.svg\" mb=\"24px\">\n            <Label>{`Your ${currency.symbol} committed`}</Label>\n            <Value>{getBalanceNumber(userPoolCharacteristics.amountTokenCommittedInLP, currency.decimals)}</Value>\n            <PercentageOfTotal\n              userAmount={userPoolCharacteristics.amountTokenCommittedInLP}\n              totalAmount={publicPoolCharacteristics.totalAmountPool}\n            />\n          </TokenSection>\n          <TokenSection img={tokenImage}>\n            <Label>{`${token.symbol} to receive`}</Label>\n            <Value>{getBalanceNumber(userPoolCharacteristics.offeringAmountInToken, token.decimals)}</Value>\n          </TokenSection>\n        </>\n      )\n    }\n    if (publicIfoData.status === 'finished') {\n      return userPoolCharacteristics.amountTokenCommittedInLP.isEqualTo(0) ? (\n        <Flex flexDirection=\"column\" alignItems=\"center\">\n          <Image src=\"/images/bunny-placeholder.svg\" width={80} height={80} mb=\"16px\" />\n          <Text>{t('You didn’t participate in this sale!')}</Text>\n        </Flex>\n      ) : (\n        <>\n          <TokenSection img=\"/images/farms/cake-bnb.svg\" mb=\"24px\">\n            <Label>{hasClaimed ? `Your ${currency.symbol} RECLAIMED` : `Your ${currency.symbol} TO RECLAIM`}</Label>\n            <Flex alignItems=\"center\">\n              <Value>{getBalanceNumber(userPoolCharacteristics.refundingAmountInLP, currency.decimals)}</Value>\n              {hasClaimed && <CheckmarkCircleIcon color=\"success\" ml=\"8px\" />}\n            </Flex>\n            <PercentageOfTotal\n              userAmount={userPoolCharacteristics.amountTokenCommittedInLP}\n              totalAmount={publicPoolCharacteristics.totalAmountPool}\n            />\n          </TokenSection>\n          <TokenSection img={tokenImage}>\n            <Label>{hasClaimed ? `${token.symbol} received` : `${token.symbol} to received`}</Label>\n            <Flex alignItems=\"center\">\n              <Value>{getBalanceNumber(userPoolCharacteristics.offeringAmountInToken, token.decimals)}</Value>\n              {!hasClaimed && userPoolCharacteristics.offeringAmountInToken.isEqualTo(0) && (\n                <div ref={targetRef} style={{ display: 'flex', marginLeft: '8px' }}>\n                  <HelpIcon />\n                </div>\n              )}\n              {hasClaimed && <CheckmarkCircleIcon color=\"success\" ml=\"8px\" />}\n            </Flex>\n          </TokenSection>\n        </>\n      )\n    }\n    return null\n  }\n  return (\n    <Box pb=\"24px\">\n      {tooltipVisible && tooltip}\n      {renderTokenSection()}\n    </Box>\n  )\n}\n\nexport default IfoCardTokens\n"]},"metadata":{},"sourceType":"module"}