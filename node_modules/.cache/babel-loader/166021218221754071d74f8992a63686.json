{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { useChainlinkOracleContract } from 'hooks/useContract';\nimport useLastUpdated from 'hooks/useLastUpdated';\nimport { getBalanceAmount } from 'utils/formatBalance';\nimport { BIG_ZERO } from 'utils/bigNumber';\n\nconst useGetLatestOraclePrice = () => {\n  _s();\n\n  const [price, setPrice] = useState(BIG_ZERO);\n  const {\n    lastUpdated,\n    setLastUpdated: refresh\n  } = useLastUpdated();\n  const chainlinkOracleContract = useChainlinkOracleContract();\n  useEffect(() => {\n    const fetchPrice = async () => {\n      const response = await chainlinkOracleContract.methods.latestAnswer().call();\n      setPrice(getBalanceAmount(new BigNumber(response), 8));\n    };\n\n    fetchPrice();\n  }, [chainlinkOracleContract, lastUpdated, setPrice]);\n  return {\n    price,\n    lastUpdated,\n    refresh\n  };\n};\n\n_s(useGetLatestOraclePrice, \"dEGzPTraZIfTqcScZptkEhD+X1Y=\", false, function () {\n  return [useLastUpdated, useChainlinkOracleContract];\n});\n\nexport default useGetLatestOraclePrice;","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Predictions/hooks/useGetLatestOraclePrice.ts"],"names":["useEffect","useState","BigNumber","useChainlinkOracleContract","useLastUpdated","getBalanceAmount","BIG_ZERO","useGetLatestOraclePrice","price","setPrice","lastUpdated","setLastUpdated","refresh","chainlinkOracleContract","fetchPrice","response","methods","latestAnswer","call"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,0BAAT,QAA2C,mBAA3C;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,uBAAuB,GAAG,MAAM;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACK,QAAD,CAAlC;AACA,QAAM;AAAEI,IAAAA,WAAF;AAAeC,IAAAA,cAAc,EAAEC;AAA/B,MAA2CR,cAAc,EAA/D;AACA,QAAMS,uBAAuB,GAAGV,0BAA0B,EAA1D;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMF,uBAAuB,CAACG,OAAxB,CAAgCC,YAAhC,GAA+CC,IAA/C,EAAvB;AACAT,MAAAA,QAAQ,CAACJ,gBAAgB,CAAC,IAAIH,SAAJ,CAAca,QAAd,CAAD,EAA0B,CAA1B,CAAjB,CAAR;AACD,KAHD;;AAKAD,IAAAA,UAAU;AACX,GAPQ,EAON,CAACD,uBAAD,EAA0BH,WAA1B,EAAuCD,QAAvC,CAPM,CAAT;AASA,SAAO;AAAED,IAAAA,KAAF;AAASE,IAAAA,WAAT;AAAsBE,IAAAA;AAAtB,GAAP;AACD,CAfD;;GAAML,uB;UAE6CH,c,EACjBD,0B;;;AAclC,eAAeI,uBAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useChainlinkOracleContract } from 'hooks/useContract'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst useGetLatestOraclePrice = () => {\n  const [price, setPrice] = useState(BIG_ZERO)\n  const { lastUpdated, setLastUpdated: refresh } = useLastUpdated()\n  const chainlinkOracleContract = useChainlinkOracleContract()\n\n  useEffect(() => {\n    const fetchPrice = async () => {\n      const response = await chainlinkOracleContract.methods.latestAnswer().call()\n      setPrice(getBalanceAmount(new BigNumber(response), 8))\n    }\n\n    fetchPrice()\n  }, [chainlinkOracleContract, lastUpdated, setPrice])\n\n  return { price, lastUpdated, refresh }\n}\n\nexport default useGetLatestOraclePrice\n"]},"metadata":{},"sourceType":"module"}