{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/views/Predictions/components/RoundCard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { useGetBetByRoundId, useGetCurrentEpoch } from 'state/hooks';\nimport { BetPosition } from 'state/types';\nimport { getMultiplier } from '../../helpers';\nimport ExpiredRoundCard from './ExpiredRoundCard';\nimport LiveRoundCard from './LiveRoundCard';\nimport OpenRoundCard from './OpenRoundCard';\nimport SoonRoundCard from './SoonRoundCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoundCard = ({\n  round\n}) => {\n  _s();\n\n  const {\n    id,\n    epoch,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount\n  } = round;\n  const currentEpoch = useGetCurrentEpoch();\n  const {\n    account\n  } = useWeb3React();\n  const bet = useGetBetByRoundId(account, id);\n  const hasEntered = bet !== null;\n  const hasEnteredUp = hasEntered && bet.position === BetPosition.BULL;\n  const hasEnteredDown = hasEntered && bet.position === BetPosition.BEAR;\n  const bullMultiplier = getMultiplier(totalAmount, bullAmount);\n  const bearMultiplier = getMultiplier(totalAmount, bearAmount); // Next (open) round\n\n  if (epoch === currentEpoch && lockPrice === null) {\n    return /*#__PURE__*/_jsxDEV(OpenRoundCard, {\n      round: round,\n      hasEnteredDown: hasEnteredDown,\n      hasEnteredUp: hasEnteredUp,\n      betAmount: bet === null || bet === void 0 ? void 0 : bet.amount,\n      bullMultiplier: bullMultiplier,\n      bearMultiplier: bearMultiplier\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  } // Live round\n\n\n  if (closePrice === null && epoch === currentEpoch - 1) {\n    return /*#__PURE__*/_jsxDEV(LiveRoundCard, {\n      betAmount: bet === null || bet === void 0 ? void 0 : bet.amount,\n      hasEnteredDown: hasEnteredDown,\n      hasEnteredUp: hasEnteredUp,\n      round: round,\n      bullMultiplier: bullMultiplier,\n      bearMultiplier: bearMultiplier\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  } // Fake future rounds\n\n\n  if (epoch > currentEpoch) {\n    return /*#__PURE__*/_jsxDEV(SoonRoundCard, {\n      round: round\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  } // Past rounds\n\n\n  return /*#__PURE__*/_jsxDEV(ExpiredRoundCard, {\n    round: round,\n    hasEnteredDown: hasEnteredDown,\n    hasEnteredUp: hasEnteredUp,\n    betAmount: bet === null || bet === void 0 ? void 0 : bet.amount,\n    bullMultiplier: bullMultiplier,\n    bearMultiplier: bearMultiplier\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoundCard, \"8rvALRHEfOzf5FT/9F5bj0WA5S8=\", false, function () {\n  return [useGetCurrentEpoch, useWeb3React, useGetBetByRoundId];\n});\n\n_c = RoundCard;\nexport default RoundCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoundCard\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Predictions/components/RoundCard/index.tsx"],"names":["React","useWeb3React","useGetBetByRoundId","useGetCurrentEpoch","BetPosition","getMultiplier","ExpiredRoundCard","LiveRoundCard","OpenRoundCard","SoonRoundCard","RoundCard","round","id","epoch","lockPrice","closePrice","totalAmount","bullAmount","bearAmount","currentEpoch","account","bet","hasEntered","hasEnteredUp","position","BULL","hasEnteredDown","BEAR","bullMultiplier","bearMultiplier","amount"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,aAAvD;AACA,SAASC,WAAT,QAAmC,aAAnC;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAMA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACzD,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA,UAAxB;AAAoCC,IAAAA,WAApC;AAAiDC,IAAAA,UAAjD;AAA6DC,IAAAA;AAA7D,MAA4EP,KAAlF;AACA,QAAMQ,YAAY,GAAGhB,kBAAkB,EAAvC;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAcnB,YAAY,EAAhC;AACA,QAAMoB,GAAG,GAAGnB,kBAAkB,CAACkB,OAAD,EAAUR,EAAV,CAA9B;AACA,QAAMU,UAAU,GAAGD,GAAG,KAAK,IAA3B;AACA,QAAME,YAAY,GAAGD,UAAU,IAAID,GAAG,CAACG,QAAJ,KAAiBpB,WAAW,CAACqB,IAAhE;AACA,QAAMC,cAAc,GAAGJ,UAAU,IAAID,GAAG,CAACG,QAAJ,KAAiBpB,WAAW,CAACuB,IAAlE;AACA,QAAMC,cAAc,GAAGvB,aAAa,CAACW,WAAD,EAAcC,UAAd,CAApC;AACA,QAAMY,cAAc,GAAGxB,aAAa,CAACW,WAAD,EAAcE,UAAd,CAApC,CATyD,CAWzD;;AACA,MAAIL,KAAK,KAAKM,YAAV,IAA0BL,SAAS,KAAK,IAA5C,EAAkD;AAChD,wBACE,QAAC,aAAD;AACE,MAAA,KAAK,EAAEH,KADT;AAEE,MAAA,cAAc,EAAEe,cAFlB;AAGE,MAAA,YAAY,EAAEH,YAHhB;AAIE,MAAA,SAAS,EAAEF,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAES,MAJlB;AAKE,MAAA,cAAc,EAAEF,cALlB;AAME,MAAA,cAAc,EAAEC;AANlB;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAvBwD,CAyBzD;;;AACA,MAAId,UAAU,KAAK,IAAf,IAAuBF,KAAK,KAAKM,YAAY,GAAG,CAApD,EAAuD;AACrD,wBACE,QAAC,aAAD;AACE,MAAA,SAAS,EAAEE,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAES,MADlB;AAEE,MAAA,cAAc,EAAEJ,cAFlB;AAGE,MAAA,YAAY,EAAEH,YAHhB;AAIE,MAAA,KAAK,EAAEZ,KAJT;AAKE,MAAA,cAAc,EAAEiB,cALlB;AAME,MAAA,cAAc,EAAEC;AANlB;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GArCwD,CAuCzD;;;AACA,MAAIhB,KAAK,GAAGM,YAAZ,EAA0B;AACxB,wBAAO,QAAC,aAAD;AAAe,MAAA,KAAK,EAAER;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GA1CwD,CA4CzD;;;AACA,sBACE,QAAC,gBAAD;AACE,IAAA,KAAK,EAAEA,KADT;AAEE,IAAA,cAAc,EAAEe,cAFlB;AAGE,IAAA,YAAY,EAAEH,YAHhB;AAIE,IAAA,SAAS,EAAEF,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAES,MAJlB;AAKE,IAAA,cAAc,EAAEF,cALlB;AAME,IAAA,cAAc,EAAEC;AANlB;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAvDD;;GAAMnB,S;UAEiBP,kB,EACDF,Y,EACRC,kB;;;KAJRQ,S;AAyDN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useGetBetByRoundId, useGetCurrentEpoch } from 'state/hooks'\nimport { BetPosition, Round } from 'state/types'\nimport { getMultiplier } from '../../helpers'\nimport ExpiredRoundCard from './ExpiredRoundCard'\nimport LiveRoundCard from './LiveRoundCard'\nimport OpenRoundCard from './OpenRoundCard'\nimport SoonRoundCard from './SoonRoundCard'\n\ninterface RoundCardProps {\n  round: Round\n}\n\nconst RoundCard: React.FC<RoundCardProps> = ({ round }) => {\n  const { id, epoch, lockPrice, closePrice, totalAmount, bullAmount, bearAmount } = round\n  const currentEpoch = useGetCurrentEpoch()\n  const { account } = useWeb3React()\n  const bet = useGetBetByRoundId(account, id)\n  const hasEntered = bet !== null\n  const hasEnteredUp = hasEntered && bet.position === BetPosition.BULL\n  const hasEnteredDown = hasEntered && bet.position === BetPosition.BEAR\n  const bullMultiplier = getMultiplier(totalAmount, bullAmount)\n  const bearMultiplier = getMultiplier(totalAmount, bearAmount)\n\n  // Next (open) round\n  if (epoch === currentEpoch && lockPrice === null) {\n    return (\n      <OpenRoundCard\n        round={round}\n        hasEnteredDown={hasEnteredDown}\n        hasEnteredUp={hasEnteredUp}\n        betAmount={bet?.amount}\n        bullMultiplier={bullMultiplier}\n        bearMultiplier={bearMultiplier}\n      />\n    )\n  }\n\n  // Live round\n  if (closePrice === null && epoch === currentEpoch - 1) {\n    return (\n      <LiveRoundCard\n        betAmount={bet?.amount}\n        hasEnteredDown={hasEnteredDown}\n        hasEnteredUp={hasEnteredUp}\n        round={round}\n        bullMultiplier={bullMultiplier}\n        bearMultiplier={bearMultiplier}\n      />\n    )\n  }\n\n  // Fake future rounds\n  if (epoch > currentEpoch) {\n    return <SoonRoundCard round={round} />\n  }\n\n  // Past rounds\n  return (\n    <ExpiredRoundCard\n      round={round}\n      hasEnteredDown={hasEnteredDown}\n      hasEnteredUp={hasEnteredUp}\n      betAmount={bet?.amount}\n      bullMultiplier={bullMultiplier}\n      bearMultiplier={bearMultiplier}\n    />\n  )\n}\n\nexport default RoundCard\n"]},"metadata":{},"sourceType":"module"}