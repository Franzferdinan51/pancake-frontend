{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/views/Lottery/components/PrizeGrid.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'contexts/Localization';\nimport { Heading, Text } from '@pancakeswap/uikit';\nimport { BigNumber } from 'bignumber.js';\nimport { usePriceCakeBusd } from 'state/hooks';\nimport CardBusdValue from '../../Home/components/CardBusdValue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.pastDraw ? 3 : 2}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`;\n_c = Grid;\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`;\n_c2 = RightAlignedText;\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`;\n_c3 = RightAlignedHeading;\nconst GridItem = styled.div`\n  margin-bottom: ${props => props.marginBottom ? props.marginBottom : '10px'};\n`;\n_c4 = GridItem;\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`;\n_c5 = PastDrawGridItem;\n\nconst PrizeGrid = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches\n}) => {\n  _s();\n\n  const fourMatchesAmount = +(lotteryPrizeAmount / 100 * 50).toFixed(0);\n  const threeMatchesAmount = +(lotteryPrizeAmount / 100 * 20).toFixed(0);\n  const twoMatchesAmount = +(lotteryPrizeAmount / 100 * 10).toFixed(0);\n  const burnAmount = +(lotteryPrizeAmount / 100 * 20).toFixed(0);\n  const {\n    t\n  } = useTranslation();\n  const cakeBusdPrice = usePriceCakeBusd();\n\n  const getCakeBusdValue = amount => {\n    return new BigNumber(amount).multipliedBy(cakeBusdPrice).toNumber();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    pastDraw: pastDraw,\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"14px\",\n        color: \"textSubtle\",\n        children: t('No. Matched')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), pastDraw && /*#__PURE__*/_jsxDEV(PastDrawGridItem, {\n      children: /*#__PURE__*/_jsxDEV(RightAlignedText, {\n        fontSize: \"14px\",\n        color: \"textSubtle\",\n        children: t('Winners')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      children: /*#__PURE__*/_jsxDEV(RightAlignedText, {\n        fontSize: \"14px\",\n        color: \"textSubtle\",\n        children: t('Prize Pot')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        scale: \"md\",\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), pastDraw && /*#__PURE__*/_jsxDEV(PastDrawGridItem, {\n      children: /*#__PURE__*/_jsxDEV(RightAlignedHeading, {\n        scale: \"md\",\n        children: jackpotMatches\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      children: /*#__PURE__*/_jsxDEV(RightAlignedHeading, {\n        scale: \"md\",\n        children: [fourMatchesAmount.toLocaleString(), !pastDraw && !cakeBusdPrice.eq(0) && /*#__PURE__*/_jsxDEV(CardBusdValue, {\n          value: getCakeBusdValue(fourMatchesAmount)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), pastDraw && /*#__PURE__*/_jsxDEV(PastDrawGridItem, {\n      children: /*#__PURE__*/_jsxDEV(RightAlignedText, {\n        bold: true,\n        children: threeTicketMatches\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      children: /*#__PURE__*/_jsxDEV(RightAlignedText, {\n        children: [threeMatchesAmount.toLocaleString(), !pastDraw && !cakeBusdPrice.eq(0) && /*#__PURE__*/_jsxDEV(CardBusdValue, {\n          value: getCakeBusdValue(threeMatchesAmount)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), pastDraw && /*#__PURE__*/_jsxDEV(PastDrawGridItem, {\n      children: /*#__PURE__*/_jsxDEV(RightAlignedText, {\n        children: twoTicketMatches\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      children: /*#__PURE__*/_jsxDEV(RightAlignedText, {\n        children: [twoMatchesAmount.toLocaleString(), !pastDraw && !cakeBusdPrice.eq(0) && /*#__PURE__*/_jsxDEV(CardBusdValue, {\n          value: getCakeBusdValue(twoMatchesAmount)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      marginBottom: \"0\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: [t(`${pastDraw ? 'Burned' : 'To burn'}`), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), pastDraw ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        marginBottom: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        marginBottom: \"0\",\n        children: /*#__PURE__*/_jsxDEV(RightAlignedText, {\n          children: burnAmount.toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(GridItem, {\n      marginBottom: \"0\",\n      children: /*#__PURE__*/_jsxDEV(RightAlignedText, {\n        children: burnAmount.toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrizeGrid, \"3TiGS+HJSZZ6O64qWvygV3kvRzk=\", false, function () {\n  return [useTranslation, usePriceCakeBusd];\n});\n\n_c6 = PrizeGrid;\nexport default PrizeGrid;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"RightAlignedText\");\n$RefreshReg$(_c3, \"RightAlignedHeading\");\n$RefreshReg$(_c4, \"GridItem\");\n$RefreshReg$(_c5, \"PastDrawGridItem\");\n$RefreshReg$(_c6, \"PrizeGrid\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Lottery/components/PrizeGrid.tsx"],"names":["React","styled","useTranslation","Heading","Text","BigNumber","usePriceCakeBusd","CardBusdValue","Grid","div","props","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","toFixed","threeMatchesAmount","twoMatchesAmount","burnAmount","t","cakeBusdPrice","getCakeBusdValue","amount","multipliedBy","toNumber","toLocaleString","eq"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport CardBusdValue from '../../Home/components/CardBusdValue'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const { t } = useTranslation()\n  const cakeBusdPrice = usePriceCakeBusd()\n\n  const getCakeBusdValue = (amount: number) => {\n    return new BigNumber(amount).multipliedBy(cakeBusdPrice).toNumber()\n  }\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {t('Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {t('Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading scale=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading scale=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading scale=\"md\">\n          {fourMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(fourMatchesAmount)} />}\n        </RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {threeMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(threeMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {twoMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(twoMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{t(`${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n"]},"metadata":{},"sourceType":"module"}