{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect } from 'react';\nimport { useAppDispatch } from 'state';\nimport { updateMarketData } from 'state/predictions';\nimport { getMarketData } from 'state/predictions/helpers';\nconst POLL_TIME_IN_SECONDS = 10;\n\nconst usePollRoundData = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const {\n    account\n  } = useWeb3React();\n  useEffect(() => {\n    const timer = setInterval(async () => {\n      const marketData = await getMarketData();\n      dispatch(updateMarketData(marketData));\n    }, POLL_TIME_IN_SECONDS * 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [account, dispatch]);\n};\n\n_s(usePollRoundData, \"e9OikIckMlYNhkfcLqWXnsEQnK4=\", false, function () {\n  return [useAppDispatch, useWeb3React];\n});\n\nexport default usePollRoundData;","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Predictions/hooks/usePollRoundData.ts"],"names":["useWeb3React","useEffect","useAppDispatch","updateMarketData","getMarketData","POLL_TIME_IN_SECONDS","usePollRoundData","dispatch","account","timer","setInterval","marketData","clearInterval"],"mappings":";;AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,MAAMC,oBAAoB,GAAG,EAA7B;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAMC,QAAQ,GAAGL,cAAc,EAA/B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAcR,YAAY,EAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,KAAK,GAAGC,WAAW,CAAC,YAAY;AACpC,YAAMC,UAAU,GAAG,MAAMP,aAAa,EAAtC;AAEAG,MAAAA,QAAQ,CAACJ,gBAAgB,CAACQ,UAAD,CAAjB,CAAR;AACD,KAJwB,EAItBN,oBAAoB,GAAG,IAJD,CAAzB;AAMA,WAAO,MAAM;AACXO,MAAAA,aAAa,CAACH,KAAD,CAAb;AACD,KAFD;AAGD,GAVQ,EAUN,CAACD,OAAD,EAAUD,QAAV,CAVM,CAAT;AAWD,CAfD;;GAAMD,gB;UACaJ,c,EACGF,Y;;;AAetB,eAAeM,gBAAf","sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport { useEffect } from 'react'\nimport { useAppDispatch } from 'state'\nimport { updateMarketData } from 'state/predictions'\nimport { getMarketData } from 'state/predictions/helpers'\n\nconst POLL_TIME_IN_SECONDS = 10\n\nconst usePollRoundData = () => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const timer = setInterval(async () => {\n      const marketData = await getMarketData()\n\n      dispatch(updateMarketData(marketData))\n    }, POLL_TIME_IN_SECONDS * 1000)\n\n    return () => {\n      clearInterval(timer)\n    }\n  }, [account, dispatch])\n}\n\nexport default usePollRoundData\n"]},"metadata":{},"sourceType":"module"}