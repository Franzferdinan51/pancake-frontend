{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$(),\n    _s14 = $RefreshSig$(),\n    _s15 = $RefreshSig$(),\n    _s16 = $RefreshSig$(),\n    _s17 = $RefreshSig$(),\n    _s18 = $RefreshSig$(),\n    _s19 = $RefreshSig$(),\n    _s20 = $RefreshSig$(),\n    _s21 = $RefreshSig$(),\n    _s22 = $RefreshSig$(),\n    _s23 = $RefreshSig$(),\n    _s24 = $RefreshSig$(),\n    _s25 = $RefreshSig$(),\n    _s26 = $RefreshSig$(),\n    _s27 = $RefreshSig$(),\n    _s28 = $RefreshSig$(),\n    _s29 = $RefreshSig$(),\n    _s30 = $RefreshSig$(),\n    _s31 = $RefreshSig$(),\n    _s32 = $RefreshSig$(),\n    _s33 = $RefreshSig$(),\n    _s34 = $RefreshSig$(),\n    _s35 = $RefreshSig$(),\n    _s36 = $RefreshSig$(),\n    _s37 = $RefreshSig$(),\n    _s38 = $RefreshSig$(),\n    _s39 = $RefreshSig$(),\n    _s40 = $RefreshSig$(),\n    _s41 = $RefreshSig$(),\n    _s42 = $RefreshSig$(),\n    _s43 = $RefreshSig$(),\n    _s44 = $RefreshSig$();\n\nimport { useEffect, useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { useWeb3React } from '@web3-react/core';\nimport { useSelector } from 'react-redux';\nimport { useAppDispatch } from 'state';\nimport { orderBy } from 'lodash';\nimport Nfts from 'config/constants/nfts';\nimport { getWeb3NoAccount } from 'utils/web3';\nimport { getAddress } from 'utils/addressHelpers';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { BIG_ZERO } from 'utils/bigNumber';\nimport useRefresh from 'hooks/useRefresh';\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync, fetchCakeVaultPublicData, fetchCakeVaultUserData, fetchCakeVaultFees, setBlock } from './actions';\nimport { fetchProfile } from './profile';\nimport { fetchTeam, fetchTeams } from './teams';\nimport { fetchAchievements } from './achievements';\nimport { fetchPrices } from './prices';\nimport { fetchWalletNfts } from './collectibles';\nimport { getCanClaim } from './predictions/helpers';\nimport { transformPool } from './pools/helpers';\nimport { fetchPoolsStakingLimitsAsync } from './pools';\nexport const useFetchPublicData = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync());\n    dispatch(fetchPoolsPublicDataAsync());\n    dispatch(fetchPoolsStakingLimitsAsync());\n  }, [dispatch, slowRefresh]);\n  useEffect(() => {\n    const web3 = getWeb3NoAccount();\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber();\n      dispatch(setBlock(blockNumber));\n    }, 6000);\n    return () => clearInterval(interval);\n  }, [dispatch]);\n}; // Farms\n\n_s(useFetchPublicData, \"HVaEInxtOkm8riirEDgP1GMYWI0=\", false, function () {\n  return [useAppDispatch, useRefresh];\n});\n\nexport const useFarms = () => {\n  _s2();\n\n  const farms = useSelector(state => state.farms);\n  return farms;\n};\n\n_s2(useFarms, \"40tjDYBLbzKzCIdd0cwm+UIfe9E=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromPid = pid => {\n  _s3();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.pid === pid));\n  return farm;\n};\n\n_s3(useFarmFromPid, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromSymbol = lpSymbol => {\n  _s4();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.lpSymbol === lpSymbol));\n  return farm;\n};\n\n_s4(useFarmFromSymbol, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmUser = pid => {\n  _s5();\n\n  const farm = useFarmFromPid(pid);\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO\n  };\n};\n\n_s5(useFarmUser, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const useLpTokenPrice = symbol => {\n  _s6();\n\n  const farm = useFarmFromSymbol(symbol);\n  const tokenPriceInUsd = useGetApiPrice(getAddress(farm.token.address));\n  return farm.lpTotalSupply && farm.lpTotalInQuoteToken ? new BigNumber(getBalanceNumber(farm.lpTotalSupply)).div(farm.lpTotalInQuoteToken).times(tokenPriceInUsd).times(2) : BIG_ZERO;\n}; // Pools\n\n_s6(useLpTokenPrice, \"EhH327xz0bVfSpIEeR1dik7tAro=\", false, function () {\n  return [useFarmFromSymbol, useGetApiPrice];\n});\n\nexport const usePools = account => {\n  _s7();\n\n  const {\n    fastRefresh\n  } = useRefresh();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account));\n    }\n  }, [account, dispatch, fastRefresh]);\n  const pools = useSelector(state => state.pools.data);\n  return pools.map(transformPool);\n};\n\n_s7(usePools, \"oyf6xOQa+DIYcm5zYC5ZeGIeRqA=\", false, function () {\n  return [useRefresh, useAppDispatch, useSelector];\n});\n\nexport const usePoolFromPid = sousId => {\n  _s8();\n\n  const pool = useSelector(state => state.pools.data.find(p => p.sousId === sousId));\n  return transformPool(pool);\n};\n\n_s8(usePoolFromPid, \"NElEvYvoNsaNFrfsmEnHfa4jRII=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFetchCakeVault = () => {\n  _s9();\n\n  const {\n    account\n  } = useWeb3React();\n  const {\n    fastRefresh\n  } = useRefresh();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData());\n  }, [dispatch, fastRefresh]);\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({\n      account\n    }));\n  }, [dispatch, fastRefresh, account]);\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees());\n  }, [dispatch]);\n};\n\n_s9(useFetchCakeVault, \"pDYnJ+ssV2U9HKPEmASotePCeog=\", false, function () {\n  return [useWeb3React, useRefresh, useAppDispatch];\n});\n\nexport const useCakeVault = () => {\n  _s10();\n\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod\n    },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime\n    }\n  } = useSelector(state => state.pools.cakeVault);\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString);\n  }, [estimatedCakeBountyRewardAsString]);\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString);\n  }, [totalPendingCakeHarvestAsString]);\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString);\n  }, [totalSharesAsString]);\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString);\n  }, [pricePerFullShareAsString]);\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString);\n  }, [totalCakeInVaultAsString]);\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString);\n  }, [userSharesAsString]);\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString);\n  }, [cakeAtLastUserActionAsString]);\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime\n    }\n  };\n}; // Profile\n\n_s10(useCakeVault, \"YV6Q9wLle93kMiaCPuN9BNIY1fg=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFetchProfile = () => {\n  _s11();\n\n  const {\n    account\n  } = useWeb3React();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchProfile(account));\n  }, [account, dispatch]);\n};\n\n_s11(useFetchProfile, \"+HYujYX/SnZ0I8i3/v+l9OV5PuY=\", false, function () {\n  return [useWeb3React, useAppDispatch];\n});\n\nexport const useProfile = () => {\n  _s12();\n\n  const {\n    isInitialized,\n    isLoading,\n    data,\n    hasRegistered\n  } = useSelector(state => state.profile);\n  return {\n    profile: data,\n    hasProfile: isInitialized && hasRegistered,\n    isInitialized,\n    isLoading\n  };\n}; // Teams\n\n_s12(useProfile, \"IKFRbj5HxYVQqavhAzR0F+CGiS4=\", false, function () {\n  return [useSelector];\n});\n\nexport const useTeam = id => {\n  _s13();\n\n  const team = useSelector(state => state.teams.data[id]);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchTeam(id));\n  }, [id, dispatch]);\n  return team;\n};\n\n_s13(useTeam, \"DyuMdVerOKX5fcfe5TyEmnC8m+o=\", false, function () {\n  return [useSelector, useAppDispatch];\n});\n\nexport const useTeams = () => {\n  _s14();\n\n  const {\n    isInitialized,\n    isLoading,\n    data\n  } = useSelector(state => state.teams);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchTeams());\n  }, [dispatch]);\n  return {\n    teams: data,\n    isInitialized,\n    isLoading\n  };\n}; // Achievements\n\n_s14(useTeams, \"MG/rX3obHehsmT4LdcT3JsnsVRA=\", false, function () {\n  return [useSelector, useAppDispatch];\n});\n\nexport const useFetchAchievements = () => {\n  _s15();\n\n  const {\n    account\n  } = useWeb3React();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account));\n    }\n  }, [account, dispatch]);\n};\n\n_s15(useFetchAchievements, \"+HYujYX/SnZ0I8i3/v+l9OV5PuY=\", false, function () {\n  return [useWeb3React, useAppDispatch];\n});\n\nexport const useAchievements = () => {\n  _s16();\n\n  const achievements = useSelector(state => state.achievements.data);\n  return achievements;\n}; // Prices\n\n_s16(useAchievements, \"YSK51t5rwnyiHZ93Q8BnGfHM9jA=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFetchPriceList = () => {\n  _s17();\n\n  const {\n    slowRefresh\n  } = useRefresh();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchPrices());\n  }, [dispatch, slowRefresh]);\n};\n\n_s17(useFetchPriceList, \"2esdmYbJUjAuA8POa4MwlrAwRNU=\", false, function () {\n  return [useRefresh, useAppDispatch];\n});\n\nexport const useGetApiPrices = () => {\n  _s18();\n\n  const prices = useSelector(state => state.prices.data);\n  return prices;\n};\n\n_s18(useGetApiPrices, \"FfFSnB6kLWyrPuGGju2q0Rwh7JY=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetApiPrice = address => {\n  _s19();\n\n  const prices = useGetApiPrices();\n\n  if (!prices) {\n    return null;\n  }\n\n  return prices[address.toLowerCase()];\n};\n\n_s19(useGetApiPrice, \"4RSofgi5q8qs6bn/kfSx+OTTFNc=\", false, function () {\n  return [useGetApiPrices];\n});\n\nexport const usePriceBnbBusd = () => {\n  _s20();\n\n  const bnbBusdFarm = useFarmFromPid(2);\n  return bnbBusdFarm.tokenPriceVsQuote ? new BigNumber(1).div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO;\n};\n\n_s20(usePriceBnbBusd, \"bjYi8xZd8XQhAOGMAQ3jqbWQ3+Y=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const usePriceCakeBusd = () => {\n  _s21();\n\n  const cakeBnbFarm = useFarmFromPid(1);\n  const bnbBusdPrice = usePriceBnbBusd();\n  const cakeBusdPrice = cakeBnbFarm.tokenPriceVsQuote ? bnbBusdPrice.times(cakeBnbFarm.tokenPriceVsQuote) : BIG_ZERO;\n  return cakeBusdPrice;\n}; // Block\n\n_s21(usePriceCakeBusd, \"2u0soOjLTJt2zujSMZsfQMbiOV8=\", false, function () {\n  return [useFarmFromPid, usePriceBnbBusd];\n});\n\nexport const useBlock = () => {\n  _s22();\n\n  return useSelector(state => state.block);\n};\n\n_s22(useBlock, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useInitialBlock = () => {\n  _s23();\n\n  return useSelector(state => state.block.initialBlock);\n}; // Predictions\n\n_s23(useInitialBlock, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useIsHistoryPaneOpen = () => {\n  _s24();\n\n  return useSelector(state => state.predictions.isHistoryPaneOpen);\n};\n\n_s24(useIsHistoryPaneOpen, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useIsChartPaneOpen = () => {\n  _s25();\n\n  return useSelector(state => state.predictions.isChartPaneOpen);\n};\n\n_s25(useIsChartPaneOpen, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetRounds = () => {\n  _s26();\n\n  return useSelector(state => state.predictions.rounds);\n};\n\n_s26(useGetRounds, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetSortedRounds = () => {\n  _s27();\n\n  const roundData = useGetRounds();\n  return orderBy(Object.values(roundData), ['epoch'], ['asc']);\n};\n\n_s27(useGetSortedRounds, \"jFCo8rqHdnklGdNQF/awTvojkG0=\", false, function () {\n  return [useGetRounds];\n});\n\nexport const useGetCurrentEpoch = () => {\n  _s28();\n\n  return useSelector(state => state.predictions.currentEpoch);\n};\n\n_s28(useGetCurrentEpoch, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetIntervalBlocks = () => {\n  _s29();\n\n  return useSelector(state => state.predictions.intervalBlocks);\n};\n\n_s29(useGetIntervalBlocks, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetBufferBlocks = () => {\n  _s30();\n\n  return useSelector(state => state.predictions.bufferBlocks);\n};\n\n_s30(useGetBufferBlocks, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetTotalIntervalBlocks = () => {\n  _s31();\n\n  const intervalBlocks = useGetIntervalBlocks();\n  const bufferBlocks = useGetBufferBlocks();\n  return intervalBlocks + bufferBlocks;\n};\n\n_s31(useGetTotalIntervalBlocks, \"Tu40sOrNdwBfiHoai7qebXljDAY=\", false, function () {\n  return [useGetIntervalBlocks, useGetBufferBlocks];\n});\n\nexport const useGetRound = id => {\n  _s32();\n\n  const rounds = useGetRounds();\n  return rounds[id];\n};\n\n_s32(useGetRound, \"CPXODwCvtLmu2soXjdA2EEMSl8I=\", false, function () {\n  return [useGetRounds];\n});\n\nexport const useGetCurrentRound = () => {\n  _s33();\n\n  const currentEpoch = useGetCurrentEpoch();\n  const rounds = useGetSortedRounds();\n  return rounds.find(round => round.epoch === currentEpoch);\n};\n\n_s33(useGetCurrentRound, \"cJlTwdlLYEKE4Qc5JxH6Xhb/WXY=\", false, function () {\n  return [useGetCurrentEpoch, useGetSortedRounds];\n});\n\nexport const useGetPredictionsStatus = () => {\n  _s34();\n\n  return useSelector(state => state.predictions.status);\n};\n\n_s34(useGetPredictionsStatus, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetHistoryFilter = () => {\n  _s35();\n\n  return useSelector(state => state.predictions.historyFilter);\n};\n\n_s35(useGetHistoryFilter, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  _s36();\n\n  return useSelector(state => state.predictions.currentRoundStartBlockNumber);\n};\n\n_s36(useGetCurrentRoundBlockNumber, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetMinBetAmount = () => {\n  _s37();\n\n  const minBetAmount = useSelector(state => state.predictions.minBetAmount);\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount]);\n};\n\n_s37(useGetMinBetAmount, \"0dRfTS7F/4osBkgeEhhyeRmd26g=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetIsFetchingHistory = () => {\n  _s38();\n\n  return useSelector(state => state.predictions.isFetchingHistory);\n};\n\n_s38(useGetIsFetchingHistory, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetHistory = () => {\n  _s39();\n\n  return useSelector(state => state.predictions.history);\n};\n\n_s39(useGetHistory, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetHistoryByAccount = account => {\n  _s40();\n\n  const bets = useGetHistory();\n  return bets ? bets[account] : [];\n};\n\n_s40(useGetHistoryByAccount, \"Yrp7yExhLjDp2kAaHnofs1ZdL7U=\", false, function () {\n  return [useGetHistory];\n});\n\nexport const useGetBetByRoundId = (account, roundId) => {\n  _s41();\n\n  const bets = useSelector(state => state.predictions.bets);\n\n  if (!bets[account]) {\n    return null;\n  }\n\n  if (!bets[account][roundId]) {\n    return null;\n  }\n\n  return bets[account][roundId];\n};\n\n_s41(useGetBetByRoundId, \"l2hU2dIovtccD4bBSsew9DdDw24=\", false, function () {\n  return [useSelector];\n});\n\nexport const useBetCanClaim = (account, roundId) => {\n  _s42();\n\n  const bet = useGetBetByRoundId(account, roundId);\n\n  if (!bet) {\n    return false;\n  }\n\n  return getCanClaim(bet);\n};\n\n_s42(useBetCanClaim, \"9z+oSI36i7aG8TGBwAPV7AACn8o=\", false, function () {\n  return [useGetBetByRoundId];\n});\n\nexport const useGetLastOraclePrice = () => {\n  _s43();\n\n  const lastOraclePrice = useSelector(state => state.predictions.lastOraclePrice);\n  return new BigNumber(lastOraclePrice);\n}; // Collectibles\n\n_s43(useGetLastOraclePrice, \"O9QgRsKM2GZKz/hay3OnQqqlV7g=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetCollectibles = () => {\n  _s44();\n\n  const {\n    account\n  } = useWeb3React();\n  const dispatch = useAppDispatch();\n  const {\n    isInitialized,\n    isLoading,\n    data\n  } = useSelector(state => state.collectibles);\n  const identifiers = Object.keys(data);\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account));\n    }\n  }, [isInitialized, account, dispatch]);\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter(nft => identifiers.includes(nft.identifier))\n  };\n};\n\n_s44(useGetCollectibles, \"+OJP6i7Yx7acr6GgAtxV2TRO7fk=\", false, function () {\n  return [useWeb3React, useAppDispatch, useSelector];\n});","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/state/hooks.ts"],"names":["useEffect","useMemo","BigNumber","useWeb3React","useSelector","useAppDispatch","orderBy","Nfts","getWeb3NoAccount","getAddress","getBalanceNumber","BIG_ZERO","useRefresh","fetchFarmsPublicDataAsync","fetchPoolsPublicDataAsync","fetchPoolsUserDataAsync","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","setBlock","fetchProfile","fetchTeam","fetchTeams","fetchAchievements","fetchPrices","fetchWalletNfts","getCanClaim","transformPool","fetchPoolsStakingLimitsAsync","useFetchPublicData","dispatch","slowRefresh","web3","interval","setInterval","blockNumber","eth","getBlockNumber","clearInterval","useFarms","farms","state","useFarmFromPid","pid","farm","data","find","f","useFarmFromSymbol","lpSymbol","useFarmUser","allowance","userData","tokenBalance","stakedBalance","earnings","useLpTokenPrice","symbol","tokenPriceInUsd","useGetApiPrice","token","address","lpTotalSupply","lpTotalInQuoteToken","div","times","usePools","account","fastRefresh","pools","map","usePoolFromPid","sousId","pool","p","useFetchCakeVault","useCakeVault","totalShares","totalSharesAsString","pricePerFullShare","pricePerFullShareAsString","totalCakeInVault","totalCakeInVaultAsString","estimatedCakeBountyReward","estimatedCakeBountyRewardAsString","totalPendingCakeHarvest","totalPendingCakeHarvestAsString","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","isLoading","userShares","userSharesAsString","cakeAtLastUserAction","cakeAtLastUserActionAsString","lastDepositedTime","lastUserActionTime","cakeVault","useFetchProfile","useProfile","isInitialized","hasRegistered","profile","hasProfile","useTeam","id","team","teams","useTeams","useFetchAchievements","useAchievements","achievements","useFetchPriceList","useGetApiPrices","prices","toLowerCase","usePriceBnbBusd","bnbBusdFarm","tokenPriceVsQuote","usePriceCakeBusd","cakeBnbFarm","bnbBusdPrice","cakeBusdPrice","useBlock","block","useInitialBlock","initialBlock","useIsHistoryPaneOpen","predictions","isHistoryPaneOpen","useIsChartPaneOpen","isChartPaneOpen","useGetRounds","rounds","useGetSortedRounds","roundData","Object","values","useGetCurrentEpoch","currentEpoch","useGetIntervalBlocks","intervalBlocks","useGetBufferBlocks","bufferBlocks","useGetTotalIntervalBlocks","useGetRound","useGetCurrentRound","round","epoch","useGetPredictionsStatus","status","useGetHistoryFilter","historyFilter","useGetCurrentRoundBlockNumber","currentRoundStartBlockNumber","useGetMinBetAmount","minBetAmount","useGetIsFetchingHistory","isFetchingHistory","useGetHistory","history","useGetHistoryByAccount","bets","useGetBetByRoundId","roundId","useBetCanClaim","bet","useGetLastOraclePrice","lastOraclePrice","useGetCollectibles","collectibles","identifiers","keys","tokenIds","nftsInWallet","filter","nft","includes","identifier"],"mappings":"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","sourcesContent":["import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { orderBy } from 'lodash'\nimport { Team } from 'config/constants/types'\nimport Nfts from 'config/constants/nfts'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, PriceState, FarmsState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchPrices } from './prices'\nimport { fetchWalletNfts } from './collectibles'\nimport { getCanClaim } from './predictions/helpers'\nimport { transformPool } from './pools/helpers'\nimport { fetchPoolsStakingLimitsAsync } from './pools'\n\nexport const useFetchPublicData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n\n  useEffect(() => {\n    const web3 = getWeb3NoAccount()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromSymbol(symbol)\n  const tokenPriceInUsd = useGetApiPrice(getAddress(farm.token.address))\n\n  return farm.lpTotalSupply && farm.lpTotalInQuoteToken\n    ? new BigNumber(getBalanceNumber(farm.lpTotalSupply)).div(farm.lpTotalInQuoteToken).times(tokenPriceInUsd).times(2)\n    : BIG_ZERO\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools.map(transformPool)\n}\n\nexport const usePoolFromPid = (sousId: number): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return transformPool(pool)\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useGetApiPrice = (address: string) => {\n  const prices = useGetApiPrices()\n\n  if (!prices) {\n    return null\n  }\n\n  return prices[address.toLowerCase()]\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(2)\n  return bnbBusdFarm.tokenPriceVsQuote ? new BigNumber(1).div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n  const bnbBusdPrice = usePriceBnbBusd()\n\n  const cakeBusdPrice = cakeBnbFarm.tokenPriceVsQuote ? bnbBusdPrice.times(cakeBnbFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  return cakeBusdPrice\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Predictions\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetRounds = () => {\n  return useSelector((state: State) => state.predictions.rounds)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetRound = (id: string) => {\n  const rounds = useGetRounds()\n  return rounds[id]\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount])\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetBetByRoundId = (account: string, roundId: string) => {\n  const bets = useSelector((state: State) => state.predictions.bets)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][roundId]) {\n    return null\n  }\n\n  return bets[account][roundId]\n}\n\nexport const useBetCanClaim = (account: string, roundId: string) => {\n  const bet = useGetBetByRoundId(account, roundId)\n\n  if (!bet) {\n    return false\n  }\n\n  return getCanClaim(bet)\n}\n\nexport const useGetLastOraclePrice = (): BigNumber => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return new BigNumber(lastOraclePrice)\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n"]},"metadata":{},"sourceType":"module"}