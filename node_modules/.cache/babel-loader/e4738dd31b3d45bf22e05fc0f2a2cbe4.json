{"ast":null,"code":"import { BetPosition } from 'state/types';\nimport { formatNumber, getBalanceAmount } from 'utils/formatBalance';\nimport getTimePeriods from 'utils/getTimePeriods';\nexport const getBnbAmount = bnbBn => {\n  return getBalanceAmount(bnbBn, 18);\n};\nexport const formatUsd = usd => {\n  return `$${formatNumber(usd || 0, 3, 3)}`;\n};\nexport const formatBnb = bnb => {\n  return bnb ? bnb.toLocaleString(undefined, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3\n  }) : '0';\n};\nexport const formatBnbFromBigNumber = bnbBn => {\n  return formatBnb(getBnbAmount(bnbBn).toNumber());\n};\nexport const padTime = num => num.toString().padStart(2, '0');\nexport const formatRoundTime = secondsBetweenBlocks => {\n  const {\n    hours,\n    minutes,\n    seconds\n  } = getTimePeriods(secondsBetweenBlocks);\n  const minutesSeconds = `${padTime(minutes)}:${padTime(seconds)}`;\n\n  if (hours > 0) {\n    return `${padTime(hours)}:${minutesSeconds}`;\n  }\n\n  return minutesSeconds;\n};\nexport const getMultiplier = (total, amount) => {\n  if (total === 0 || amount === 0) {\n    return 0;\n  }\n\n  return total / amount;\n};\n/**\n * Calculates the total payout given a bet\n */\n\nexport const getPayout = bet => {\n  if (!bet || !bet.round) {\n    return 0;\n  }\n\n  const {\n    bullAmount,\n    bearAmount,\n    totalAmount\n  } = bet.round;\n  const multiplier = getMultiplier(totalAmount, bet.position === BetPosition.BULL ? bullAmount : bearAmount);\n  return bet.amount * multiplier;\n}; // TODO: Move this to the UI Kit\n\nexport const getBubbleGumBackground = theme => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)';\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)';\n};","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Predictions/helpers.ts"],"names":["BetPosition","formatNumber","getBalanceAmount","getTimePeriods","getBnbAmount","bnbBn","formatUsd","usd","formatBnb","bnb","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","formatBnbFromBigNumber","toNumber","padTime","num","toString","padStart","formatRoundTime","secondsBetweenBlocks","hours","minutes","seconds","minutesSeconds","getMultiplier","total","amount","getPayout","bet","round","bullAmount","bearAmount","totalAmount","multiplier","position","BULL","getBubbleGumBackground","theme","isDark"],"mappings":"AACA,SAAcA,WAAd,QAAiC,aAAjC;AAEA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,qBAA/C;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAsB;AAChD,SAAOH,gBAAgB,CAACG,KAAD,EAAQ,EAAR,CAAvB;AACD,CAFM;AAIP,OAAO,MAAMC,SAAS,GAAIC,GAAD,IAAiB;AACxC,SAAQ,IAAGN,YAAY,CAACM,GAAG,IAAI,CAAR,EAAW,CAAX,EAAc,CAAd,CAAiB,EAAxC;AACD,CAFM;AAIP,OAAO,MAAMC,SAAS,GAAIC,GAAD,IAAiB;AACxC,SAAOA,GAAG,GAAGA,GAAG,CAACC,cAAJ,CAAmBC,SAAnB,EAA8B;AAAEC,IAAAA,qBAAqB,EAAE,CAAzB;AAA4BC,IAAAA,qBAAqB,EAAE;AAAnD,GAA9B,CAAH,GAA2F,GAArG;AACD,CAFM;AAIP,OAAO,MAAMC,sBAAsB,GAAIT,KAAD,IAAsB;AAC1D,SAAOG,SAAS,CAACJ,YAAY,CAACC,KAAD,CAAZ,CAAoBU,QAApB,EAAD,CAAhB;AACD,CAFM;AAIP,OAAO,MAAMC,OAAO,GAAIC,GAAD,IAAiBA,GAAG,CAACC,QAAJ,GAAeC,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,CAAjC;AAEP,OAAO,MAAMC,eAAe,GAAIC,oBAAD,IAAkC;AAC/D,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA8BrB,cAAc,CAACkB,oBAAD,CAAlD;AACA,QAAMI,cAAc,GAAI,GAAET,OAAO,CAACO,OAAD,CAAU,IAAGP,OAAO,CAACQ,OAAD,CAAU,EAA/D;;AAEA,MAAIF,KAAK,GAAG,CAAZ,EAAe;AACb,WAAQ,GAAEN,OAAO,CAACM,KAAD,CAAQ,IAAGG,cAAe,EAA3C;AACD;;AAED,SAAOA,cAAP;AACD,CATM;AAWP,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAgBC,MAAhB,KAAmC;AAC9D,MAAID,KAAK,KAAK,CAAV,IAAeC,MAAM,KAAK,CAA9B,EAAiC;AAC/B,WAAO,CAAP;AACD;;AAED,SAAOD,KAAK,GAAGC,MAAf;AACD,CANM;AAQP;AACA;AACA;;AACA,OAAO,MAAMC,SAAS,GAAIC,GAAD,IAAc;AACrC,MAAI,CAACA,GAAD,IAAQ,CAACA,GAAG,CAACC,KAAjB,EAAwB;AACtB,WAAO,CAAP;AACD;;AAED,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA;AAA1B,MAA0CJ,GAAG,CAACC,KAApD;AACA,QAAMI,UAAU,GAAGT,aAAa,CAACQ,WAAD,EAAcJ,GAAG,CAACM,QAAJ,KAAiBpC,WAAW,CAACqC,IAA7B,GAAoCL,UAApC,GAAiDC,UAA/D,CAAhC;AACA,SAAOH,GAAG,CAACF,MAAJ,GAAaO,UAApB;AACD,CARM,C,CAUP;;AACA,OAAO,MAAMG,sBAAsB,GAAIC,KAAD,IAAyB;AAC7D,MAAIA,KAAK,CAACC,MAAV,EAAkB;AAChB,WAAO,qEAAP;AACD;;AAED,SAAO,sEAAP;AACD,CANM","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { Bet, BetPosition } from 'state/types'\nimport { DefaultTheme } from 'styled-components'\nimport { formatNumber, getBalanceAmount } from 'utils/formatBalance'\nimport getTimePeriods from 'utils/getTimePeriods'\n\nexport const getBnbAmount = (bnbBn: BigNumber) => {\n  return getBalanceAmount(bnbBn, 18)\n}\n\nexport const formatUsd = (usd: number) => {\n  return `$${formatNumber(usd || 0, 3, 3)}`\n}\n\nexport const formatBnb = (bnb: number) => {\n  return bnb ? bnb.toLocaleString(undefined, { minimumFractionDigits: 3, maximumFractionDigits: 3 }) : '0'\n}\n\nexport const formatBnbFromBigNumber = (bnbBn: BigNumber) => {\n  return formatBnb(getBnbAmount(bnbBn).toNumber())\n}\n\nexport const padTime = (num: number) => num.toString().padStart(2, '0')\n\nexport const formatRoundTime = (secondsBetweenBlocks: number) => {\n  const { hours, minutes, seconds } = getTimePeriods(secondsBetweenBlocks)\n  const minutesSeconds = `${padTime(minutes)}:${padTime(seconds)}`\n\n  if (hours > 0) {\n    return `${padTime(hours)}:${minutesSeconds}`\n  }\n\n  return minutesSeconds\n}\n\nexport const getMultiplier = (total: number, amount: number) => {\n  if (total === 0 || amount === 0) {\n    return 0\n  }\n\n  return total / amount\n}\n\n/**\n * Calculates the total payout given a bet\n */\nexport const getPayout = (bet: Bet) => {\n  if (!bet || !bet.round) {\n    return 0\n  }\n\n  const { bullAmount, bearAmount, totalAmount } = bet.round\n  const multiplier = getMultiplier(totalAmount, bet.position === BetPosition.BULL ? bullAmount : bearAmount)\n  return bet.amount * multiplier\n}\n\n// TODO: Move this to the UI Kit\nexport const getBubbleGumBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n"]},"metadata":{},"sourceType":"module"}