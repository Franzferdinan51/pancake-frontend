{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport { useCallback, useState, useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport BigNumber from 'bignumber.js';\nimport { useLottery, useLotteryTicket } from 'hooks/useContract';\nimport { BIG_ZERO } from 'utils/bigNumber';\nimport useRefresh from './useRefresh';\nimport { getTotalRewards, getTotalClaim, getMatchingRewardLength, getWinningNumbers, getTickets } from '../utils/lotteryUtils';\nimport useLastUpdated from './useLastUpdated';\n\nconst useTickets = (lotteryNumber = null) => {\n  _s();\n\n  const [tickets, setTickets] = useState([]);\n  const {\n    account\n  } = useWeb3React();\n  const ticketsContract = useLotteryTicket();\n  const lotteryContract = useLottery();\n  const {\n    fastRefresh\n  } = useRefresh();\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber);\n      setTickets(res);\n    };\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance();\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber]);\n  return tickets;\n};\n\n_s(useTickets, \"MWpA/DjtgOiShaYB6vGXZrNDFs8=\", false, function () {\n  return [useWeb3React, useLotteryTicket, useLottery, useRefresh];\n});\n\nexport const useTotalRewards = () => {\n  _s2();\n\n  const [rewards, setRewards] = useState(BIG_ZERO);\n  const lotteryContract = useLottery();\n  const {\n    fastRefresh\n  } = useRefresh();\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract);\n      setRewards(new BigNumber(res));\n    };\n\n    if (lotteryContract) {\n      fetchBalance();\n    }\n  }, [lotteryContract, fastRefresh]);\n  return rewards;\n};\n\n_s2(useTotalRewards, \"5+k4z9z4ixBbpvPij2aWWfm5j/o=\", false, function () {\n  return [useLottery, useRefresh];\n});\n\nexport const useTotalClaim = () => {\n  _s3();\n\n  const [claimAmount, setClaimAmount] = useState(BIG_ZERO);\n  const [claimLoading, setClaimLoading] = useState(false);\n  const {\n    account\n  } = useWeb3React();\n  const ticketsContract = useLotteryTicket();\n  const lotteryContract = useLottery();\n  const {\n    lastUpdated,\n    setLastUpdated\n  } = useLastUpdated();\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true);\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account);\n    setClaimAmount(claim);\n    setClaimLoading(false);\n  }, [account, lotteryContract, ticketsContract]);\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance();\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract, lastUpdated]);\n  return {\n    claimLoading,\n    claimAmount,\n    setLastUpdated\n  };\n};\n\n_s3(useTotalClaim, \"HAFfW31eTyEgeDFQ7tzRNFwmm8s=\", false, function () {\n  return [useWeb3React, useLotteryTicket, useLottery, useLastUpdated];\n});\n\nexport const useWinningNumbers = () => {\n  _s4();\n\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0]);\n  const lotteryContract = useLottery();\n  const {\n    fastRefresh\n  } = useRefresh();\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract);\n      setWinningNumbers(rewards);\n    };\n\n    if (lotteryContract) {\n      fetchBalance();\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers]);\n  return winningNumbers;\n};\n\n_s4(useWinningNumbers, \"e+wDYN0diJRHDnvipkye1HPB4s8=\", false, function () {\n  return [useLottery, useRefresh];\n});\n\nexport const useMatchingRewardLength = numbers => {\n  _s5();\n\n  const [matchingNumbers, setMatchingNumbers] = useState(0);\n  const lotteryContract = useLottery();\n  const {\n    fastRefresh\n  } = useRefresh();\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbers = await getMatchingRewardLength(lotteryContract, numbers);\n      setMatchingNumbers(matchedNumbers);\n    };\n\n    if (lotteryContract) {\n      fetchBalance();\n    }\n  }, [lotteryContract, numbers, fastRefresh]);\n  return matchingNumbers;\n};\n\n_s5(useMatchingRewardLength, \"Q0ZxCJpfFzqvkPwWhhG3/HhYGS4=\", false, function () {\n  return [useLottery, useRefresh];\n});\n\nexport default useTickets;","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/hooks/useTickets.ts"],"names":["useCallback","useState","useEffect","useWeb3React","BigNumber","useLottery","useLotteryTicket","BIG_ZERO","useRefresh","getTotalRewards","getTotalClaim","getMatchingRewardLength","getWinningNumbers","getTickets","useLastUpdated","useTickets","lotteryNumber","tickets","setTickets","account","ticketsContract","lotteryContract","fastRefresh","fetchBalance","res","useTotalRewards","rewards","setRewards","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","lastUpdated","setLastUpdated","claim","useWinningNumbers","winningNumbers","setWinningNumbers","useMatchingRewardLength","numbers","matchingNumbers","setMatchingNumbers","matchedNumbers"],"mappings":"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","sourcesContent":["import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\nimport useLastUpdated from './useLastUpdated'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(BIG_ZERO)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(BIG_ZERO)\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract, lastUpdated])\n\n  return { claimLoading, claimAmount, setLastUpdated }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n"]},"metadata":{},"sourceType":"module"}