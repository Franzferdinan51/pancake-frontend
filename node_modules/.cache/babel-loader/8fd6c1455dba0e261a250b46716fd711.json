{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/views/TradingCompetition/components/Countdown/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Flex, Skeleton, PocketWatchIcon, Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport Timer from 'components/Timer';\nimport getTimePeriods from 'utils/getTimePeriods';\nimport { CompetitionSteps, LIVE } from 'config/constants/trading-competition/easterPhases';\nimport { Heading2Text } from '../CompetitionHeadingText';\nimport ProgressStepper from './ProgressStepper';\nimport { GOLDGRADIENT } from '../Section/sectionStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled(Flex)`\n  width: fit-content;\n  height: fit-content;\n  background: linear-gradient(180deg, #7645d9 0%, #452a7a 100%);\n  border: 1px solid #7645d9;\n  box-sizing: border-box;\n  border-radius: 0px 0px 24px 24px;\n  padding: 16px 18px;\n  margin: -30px auto 50px;\n  justify-content: space-around;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    padding: 16px 24px;\n  }\n\n  ${({\n  theme\n}) => theme.mediaQueries.xl} {\n    flex-direction: column;\n    margin: -38px 0 0 36px;\n  }\n`;\n_c = Wrapper;\nconst PocketWatchWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n\n  svg {\n    height: 48px;\n    width: 48px;\n  }\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    margin-right: 24px;\n\n    svg {\n      height: 64px;\n      width: 64px;\n    }\n  }\n\n  ${({\n  theme\n}) => theme.mediaQueries.xl} {\n    margin-bottom: 16px;\n    margin-right: 0;\n  }\n`;\n_c2 = PocketWatchWrapper;\nconst StyledHeading = styled(Heading2Text)`\n  font-size: 24px;\n  margin-right: 2px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    margin-right: 4px;\n  }\n`;\n_c3 = StyledHeading;\n\nconst TimerHeadingComponent = ({\n  children\n}) => /*#__PURE__*/_jsxDEV(StyledHeading, {\n  background: GOLDGRADIENT,\n  $fill: true,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 69,\n  columnNumber: 3\n}, this);\n\n_c4 = TimerHeadingComponent;\n\nconst TimerBodyComponent = ({\n  children\n}) => /*#__PURE__*/_jsxDEV(Text, {\n  bold: true,\n  color: \"#ffff\",\n  fontSize: \"16px\",\n  mr: {\n    _: '8px',\n    sm: '16px'\n  },\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 75,\n  columnNumber: 3\n}, this);\n\n_c5 = TimerBodyComponent;\n\nconst Countdown = ({\n  currentPhase,\n  hasCompetitionEnded\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const finishMs = currentPhase.ends;\n  const currentMs = Date.now();\n  const secondsUntilNextEvent = (finishMs - currentMs) / 1000;\n  const {\n    minutes,\n    hours,\n    days\n  } = getTimePeriods(secondsUntilNextEvent);\n\n  const renderTimer = () => {\n    if (hasCompetitionEnded) {\n      return /*#__PURE__*/_jsxDEV(StyledHeading, {\n        background: GOLDGRADIENT,\n        $fill: true,\n        children: [t('Finished'), \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Timer, {\n      timerStage: currentPhase.state === LIVE ? `${t('End')}:` : `${t('Start')}:`,\n      minutes: minutes,\n      hours: hours,\n      days: days,\n      HeadingTextComponent: TimerHeadingComponent,\n      BodyTextComponent: TimerBodyComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(PocketWatchWrapper, {\n      children: /*#__PURE__*/_jsxDEV(PocketWatchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      children: [!secondsUntilNextEvent ? /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: 26,\n        width: 190,\n        mb: \"24px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n        mb: \"24px\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: renderTimer()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), !secondsUntilNextEvent ? /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: 42,\n        width: 190\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ProgressStepper, {\n        steps: CompetitionSteps,\n        activeStepIndex: currentPhase.step.index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Countdown, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c6 = Countdown;\nexport default Countdown;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"PocketWatchWrapper\");\n$RefreshReg$(_c3, \"StyledHeading\");\n$RefreshReg$(_c4, \"TimerHeadingComponent\");\n$RefreshReg$(_c5, \"TimerBodyComponent\");\n$RefreshReg$(_c6, \"Countdown\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/TradingCompetition/components/Countdown/index.tsx"],"names":["React","styled","Flex","Skeleton","PocketWatchIcon","Text","useTranslation","Timer","getTimePeriods","CompetitionSteps","LIVE","Heading2Text","ProgressStepper","GOLDGRADIENT","Wrapper","theme","mediaQueries","sm","xl","PocketWatchWrapper","StyledHeading","TimerHeadingComponent","children","TimerBodyComponent","_","Countdown","currentPhase","hasCompetitionEnded","t","finishMs","ends","currentMs","Date","now","secondsUntilNextEvent","minutes","hours","days","renderTimer","state","step","index"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Skeleton, PocketWatchIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Timer from 'components/Timer'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { CompetitionSteps, LIVE } from 'config/constants/trading-competition/easterPhases'\nimport { Heading2Text } from '../CompetitionHeadingText'\nimport { CompetitionPhaseProps } from '../../types'\nimport ProgressStepper from './ProgressStepper'\nimport { GOLDGRADIENT } from '../Section/sectionStyles'\n\nconst Wrapper = styled(Flex)`\n  width: fit-content;\n  height: fit-content;\n  background: linear-gradient(180deg, #7645d9 0%, #452a7a 100%);\n  border: 1px solid #7645d9;\n  box-sizing: border-box;\n  border-radius: 0px 0px 24px 24px;\n  padding: 16px 18px;\n  margin: -30px auto 50px;\n  justify-content: space-around;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 16px 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    flex-direction: column;\n    margin: -38px 0 0 36px;\n  }\n`\n\nconst PocketWatchWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n\n  svg {\n    height: 48px;\n    width: 48px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-right: 24px;\n\n    svg {\n      height: 64px;\n      width: 64px;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-bottom: 16px;\n    margin-right: 0;\n  }\n`\n\nconst StyledHeading = styled(Heading2Text)`\n  font-size: 24px;\n  margin-right: 2px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-right: 4px;\n  }\n`\n\nconst TimerHeadingComponent = ({ children }) => (\n  <StyledHeading background={GOLDGRADIENT} $fill>\n    {children}\n  </StyledHeading>\n)\n\nconst TimerBodyComponent = ({ children }) => (\n  <Text bold color=\"#ffff\" fontSize=\"16px\" mr={{ _: '8px', sm: '16px' }}>\n    {children}\n  </Text>\n)\n\nconst Countdown: React.FC<{ currentPhase: CompetitionPhaseProps; hasCompetitionEnded: boolean }> = ({\n  currentPhase,\n  hasCompetitionEnded,\n}) => {\n  const { t } = useTranslation()\n  const finishMs = currentPhase.ends\n  const currentMs = Date.now()\n  const secondsUntilNextEvent = (finishMs - currentMs) / 1000\n\n  const { minutes, hours, days } = getTimePeriods(secondsUntilNextEvent)\n\n  const renderTimer = () => {\n    if (hasCompetitionEnded) {\n      return (\n        <StyledHeading background={GOLDGRADIENT} $fill>\n          {t('Finished')}!\n        </StyledHeading>\n      )\n    }\n    return (\n      <Timer\n        timerStage={currentPhase.state === LIVE ? `${t('End')}:` : `${t('Start')}:`}\n        minutes={minutes}\n        hours={hours}\n        days={days}\n        HeadingTextComponent={TimerHeadingComponent}\n        BodyTextComponent={TimerBodyComponent}\n      />\n    )\n  }\n\n  return (\n    <Wrapper>\n      <PocketWatchWrapper>\n        <PocketWatchIcon />\n      </PocketWatchWrapper>\n      <Flex flexDirection=\"column\" justifyContent=\"center\">\n        {!secondsUntilNextEvent ? (\n          <Skeleton height={26} width={190} mb=\"24px\" />\n        ) : (\n          <Flex mb=\"24px\" justifyContent=\"center\" alignItems=\"center\">\n            {renderTimer()}\n          </Flex>\n        )}\n        {!secondsUntilNextEvent ? (\n          <Skeleton height={42} width={190} />\n        ) : (\n          <ProgressStepper steps={CompetitionSteps} activeStepIndex={currentPhase.step.index} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Countdown\n"]},"metadata":{},"sourceType":"module"}