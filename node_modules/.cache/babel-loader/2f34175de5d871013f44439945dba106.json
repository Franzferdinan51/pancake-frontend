{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/views/Lottery/components/PastLotteryRoundViewer/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Card, CardBody } from '@pancakeswap/uikit';\nimport getLotteryRoundData from 'utils/getLotteryRoundData';\nimport { useTranslation } from 'contexts/Localization';\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData';\nimport PastLotterySearcher from './PastLotterySearcher';\nimport PastRoundCard from './PastRoundCard';\nimport Loading from '../Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c = Wrapper;\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`;\n_c2 = StyledCardBody;\n\nconst PastLotteryRoundViewer = () => {\n  _s();\n\n  const [state, setState] = useState({\n    roundData: null,\n    error: {\n      message: null,\n      type: null\n    },\n    isInitialized: false,\n    isLoading: true\n  });\n  const {\n    data: initialLotteryData,\n    mostRecentLotteryNumber\n  } = useGetRecentLotteryRoundData();\n  const {\n    t\n  } = useTranslation();\n  const {\n    roundData,\n    error,\n    isInitialized,\n    isLoading\n  } = state;\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState(prevState => ({ ...prevState,\n        isLoading: false,\n        isInitialized: true,\n        roundData: initialLotteryData\n      }));\n    }\n  }, [initialLotteryData, setState]);\n\n  const handleSubmit = async lotteryNumber => {\n    setState(prevState => ({ ...prevState,\n      isLoading: true\n    }));\n    getLotteryRoundData(lotteryNumber).then(data => {\n      if (data.error) {\n        setState(prevState => ({ ...prevState,\n          error: {\n            message: t('The lottery number you provided does not exist'),\n            type: 'out of range'\n          },\n          isLoading: false,\n          isInitialized: true\n        }));\n      } else {\n        setState(prevState => ({ ...prevState,\n          error: {\n            message: null,\n            type: null\n          },\n          roundData: data,\n          isLoading: false,\n          isInitialized: true\n        }));\n      }\n    }).catch(() => {\n      setState(prevState => ({ ...prevState,\n        error: {\n          message: t('Error fetching data'),\n          type: 'api'\n        },\n        isLoading: false,\n        isInitialized: true\n      }));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(PastLotterySearcher, {\n      initialLotteryNumber: mostRecentLotteryNumber,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), !isInitialized || isLoading ? /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(StyledCardBody, {\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PastRoundCard, {\n      error: error,\n      data: roundData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PastLotteryRoundViewer, \"EsSMw1Ab00noQJ6RPzanFjKWxcU=\", false, function () {\n  return [useGetRecentLotteryRoundData, useTranslation];\n});\n\n_c3 = PastLotteryRoundViewer;\nexport default PastLotteryRoundViewer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"StyledCardBody\");\n$RefreshReg$(_c3, \"PastLotteryRoundViewer\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Lottery/components/PastLotteryRoundViewer/index.tsx"],"names":["React","useState","useEffect","styled","Card","CardBody","getLotteryRoundData","useTranslation","useGetRecentLotteryRoundData","PastLotterySearcher","PastRoundCard","Loading","Wrapper","div","StyledCardBody","PastLotteryRoundViewer","state","setState","roundData","error","message","type","isInitialized","isLoading","data","initialLotteryData","mostRecentLotteryNumber","t","prevState","handleSubmit","lotteryNumber","then","catch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const { t } = useTranslation()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: t('The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: t('Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n"]},"metadata":{},"sourceType":"module"}