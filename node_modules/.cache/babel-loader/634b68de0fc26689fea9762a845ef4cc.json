{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/views/Predictions/components/CollectRoundWinningsModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ModalContainer, ModalBody, ModalTitle, ModalHeader, Button, AutoRenewIcon, TrophyGoldIcon, Text, Flex, Heading, Box, LinkExternal, ModalCloseButton } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { useAppDispatch } from 'state';\nimport { usePriceBnbBusd } from 'state/hooks';\nimport { markBetAsCollected } from 'state/predictions';\nimport { useTranslation } from 'contexts/Localization';\nimport useToast from 'hooks/useToast';\nimport { usePredictionsContract } from 'hooks/useContract';\nimport { formatBnb } from '../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = styled(ModalContainer)`\n  overflow: visible;\n`;\n_c = Modal;\nconst BunnyDecoration = styled.div`\n  position: absolute;\n  top: -116px; // line up bunny at the top of the modal\n  left: 0px;\n  text-align: center;\n  width: 100%;\n`;\n_c2 = BunnyDecoration;\n\nconst CollectRoundWinningsModal = ({\n  payout,\n  roundId,\n  epoch,\n  onDismiss,\n  onSuccess\n}) => {\n  _s();\n\n  const [isPendingTx, setIsPendingTx] = useState(false);\n  const {\n    account\n  } = useWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const predictionsContract = usePredictionsContract();\n  const bnbBusdPrice = usePriceBnbBusd();\n  const dispatch = useAppDispatch();\n\n  const handleClick = () => {\n    predictionsContract.methods.claim(epoch).send({\n      from: account\n    }).once('sending', () => {\n      setIsPendingTx(true);\n    }).once('receipt', async result => {\n      if (onSuccess) {\n        await onSuccess();\n      }\n\n      dispatch(markBetAsCollected({\n        account,\n        roundId\n      }));\n      onDismiss();\n      setIsPendingTx(false);\n      toastSuccess(t('Winnings collected!'), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          as: \"p\",\n          mb: \"8px\",\n          children: t('Your prizes have been sent to your wallet')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), result.transactionHash && /*#__PURE__*/_jsxDEV(LinkExternal, {\n          href: `https://bscscan.com/tx/${result.transactionHash}`,\n          children: t('View on BscScan')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this));\n    }).once('error', error => {\n      setIsPendingTx(false);\n      toastError('Error', error === null || error === void 0 ? void 0 : error.message);\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    minWidth: \"288px\",\n    position: \"relative\",\n    mt: \"124px\",\n    children: [/*#__PURE__*/_jsxDEV(BunnyDecoration, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/decorations/prize-bunny.png\",\n        alt: \"bunny decoration\",\n        height: \"124px\",\n        width: \"168px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalHeader, {\n      children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          children: t('Collect Winnings')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {\n        onDismiss: onDismiss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      p: \"24px\",\n      children: [/*#__PURE__*/_jsxDEV(TrophyGoldIcon, {\n        width: \"96px\",\n        mx: \"auto\",\n        mb: \"24px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"start\",\n        justifyContent: \"space-between\",\n        mb: \"24px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: t('Collecting')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: `${formatBnb(payout)} BNB`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"12px\",\n            color: \"textSubtle\",\n            children: `~$${formatBnb(bnbBusdPrice.times(payout).toNumber())}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        width: \"100%\",\n        mb: \"8px\",\n        onClick: handleClick,\n        isLoading: isPendingTx,\n        endIcon: isPendingTx ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n          spin: true,\n          color: \"currentColor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 34\n        }, this) : null,\n        children: t('Confirm')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CollectRoundWinningsModal, \"NArkcuFKkgFf2eBkFgx1F9brSCM=\", false, function () {\n  return [useWeb3React, useTranslation, useToast, usePredictionsContract, usePriceBnbBusd, useAppDispatch];\n});\n\n_c3 = CollectRoundWinningsModal;\nexport default CollectRoundWinningsModal;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"BunnyDecoration\");\n$RefreshReg$(_c3, \"CollectRoundWinningsModal\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Predictions/components/CollectRoundWinningsModal.tsx"],"names":["React","useState","styled","ModalContainer","ModalBody","ModalTitle","ModalHeader","Button","AutoRenewIcon","TrophyGoldIcon","Text","Flex","Heading","Box","LinkExternal","ModalCloseButton","useWeb3React","useAppDispatch","usePriceBnbBusd","markBetAsCollected","useTranslation","useToast","usePredictionsContract","formatBnb","Modal","BunnyDecoration","div","CollectRoundWinningsModal","payout","roundId","epoch","onDismiss","onSuccess","isPendingTx","setIsPendingTx","account","t","toastSuccess","toastError","predictionsContract","bnbBusdPrice","dispatch","handleClick","methods","claim","send","from","once","result","transactionHash","error","message","console","textAlign","times","toNumber"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACEC,cADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,WAJF,EAMEC,MANF,EAOEC,aAPF,EAQEC,cARF,EASEC,IATF,EAUEC,IAVF,EAWEC,OAXF,EAYEC,GAZF,EAaEC,YAbF,EAcEC,gBAdF,QAeO,oBAfP;AAgBA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,sBAAT,QAAuC,mBAAvC;AACA,SAASC,SAAT,QAA0B,YAA1B;;AASA,MAAMC,KAAK,GAAGtB,MAAM,CAACC,cAAD,CAAiB;AACrC;AACA,CAFA;KAAMqB,K;AAIN,MAAMC,eAAe,GAAGvB,MAAM,CAACwB,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,e;;AAQN,MAAME,yBAAmE,GAAG,CAAC;AAC3EC,EAAAA,MAD2E;AAE3EC,EAAAA,OAF2E;AAG3EC,EAAAA,KAH2E;AAI3EC,EAAAA,SAJ2E;AAK3EC,EAAAA;AAL2E,CAAD,KAMtE;AAAA;;AACJ,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjC,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAEkC,IAAAA;AAAF,MAAcnB,YAAY,EAAhC;AACA,QAAM;AAAEoB,IAAAA;AAAF,MAAQhB,cAAc,EAA5B;AACA,QAAM;AAAEiB,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA+BjB,QAAQ,EAA7C;AACA,QAAMkB,mBAAmB,GAAGjB,sBAAsB,EAAlD;AACA,QAAMkB,YAAY,GAAGtB,eAAe,EAApC;AACA,QAAMuB,QAAQ,GAAGxB,cAAc,EAA/B;;AAEA,QAAMyB,WAAW,GAAG,MAAM;AACxBH,IAAAA,mBAAmB,CAACI,OAApB,CACGC,KADH,CACSd,KADT,EAEGe,IAFH,CAEQ;AAAEC,MAAAA,IAAI,EAAEX;AAAR,KAFR,EAGGY,IAHH,CAGQ,SAHR,EAGmB,MAAM;AACrBb,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KALH,EAMGa,IANH,CAMQ,SANR,EAMmB,MAAOC,MAAP,IAAkB;AACjC,UAAIhB,SAAJ,EAAe;AACb,cAAMA,SAAS,EAAf;AACD;;AAEDS,MAAAA,QAAQ,CAACtB,kBAAkB,CAAC;AAAEgB,QAAAA,OAAF;AAAWN,QAAAA;AAAX,OAAD,CAAnB,CAAR;AACAE,MAAAA,SAAS;AACTG,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAG,MAAAA,YAAY,CACVD,CAAC,CAAC,qBAAD,CADS,eAEV,QAAC,GAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,EAAE,EAAC,KAAhB;AAAA,oBACGA,CAAC,CAAC,2CAAD;AADJ;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGY,MAAM,CAACC,eAAP,iBACC,QAAC,YAAD;AAAc,UAAA,IAAI,EAAG,0BAAyBD,MAAM,CAACC,eAAgB,EAArE;AAAA,oBACGb,CAAC,CAAC,iBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFU,CAAZ;AAaD,KA3BH,EA4BGW,IA5BH,CA4BQ,OA5BR,EA4BkBG,KAAD,IAAW;AACxBhB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAI,MAAAA,UAAU,CAAC,OAAD,EAAUY,KAAV,aAAUA,KAAV,uBAAUA,KAAK,CAAEC,OAAjB,CAAV;AACAC,MAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD,KAhCH;AAiCD,GAlCD;;AAoCA,sBACE,QAAC,KAAD;AAAO,IAAA,QAAQ,EAAC,OAAhB;AAAwB,IAAA,QAAQ,EAAC,UAAjC;AAA4C,IAAA,EAAE,EAAC,OAA/C;AAAA,4BACE,QAAC,eAAD;AAAA,6BACE;AAAK,QAAA,GAAG,EAAC,qCAAT;AAA+C,QAAA,GAAG,EAAC,kBAAnD;AAAsE,QAAA,MAAM,EAAC,OAA7E;AAAqF,QAAA,KAAK,EAAC;AAA3F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAA,+BACE,QAAC,OAAD;AAAA,oBAAUd,CAAC,CAAC,kBAAD;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAEL;AAA7B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE,QAAC,SAAD;AAAW,MAAA,CAAC,EAAC,MAAb;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,MAAtB;AAA6B,QAAA,EAAE,EAAC,MAAhC;AAAuC,QAAA,EAAE,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,OAAjB;AAAyB,QAAA,cAAc,EAAC,eAAxC;AAAwD,QAAA,EAAE,EAAC,MAA3D;AAAA,gCACE,QAAC,IAAD;AAAA,oBAAOK,CAAC,CAAC,YAAD;AAAR;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAE;AAAEiB,YAAAA,SAAS,EAAE;AAAb,WAAZ;AAAA,kCACE,QAAC,IAAD;AAAA,sBAAQ,GAAE9B,SAAS,CAACK,MAAD,CAAS;AAA5B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAC,MAAf;AAAsB,YAAA,KAAK,EAAC,YAA5B;AAAA,sBACI,KAAIL,SAAS,CAACiB,YAAY,CAACc,KAAb,CAAmB1B,MAAnB,EAA2B2B,QAA3B,EAAD,CAAwC;AADzD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,EAAE,EAAC,KAFL;AAGE,QAAA,OAAO,EAAEb,WAHX;AAIE,QAAA,SAAS,EAAET,WAJb;AAKE,QAAA,OAAO,EAAEA,WAAW,gBAAG,QAAC,aAAD;AAAe,UAAA,IAAI,MAAnB;AAAoB,UAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAiD,IALvE;AAAA,kBAOGG,CAAC,CAAC,SAAD;AAPJ;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CArFD;;GAAMT,yB;UAQgBX,Y,EACNI,c,EACuBC,Q,EACTC,sB,EACPJ,e,EACJD,c;;;MAbbU,yB;AAuFN,eAAeA,yBAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  ModalContainer,\n  ModalBody,\n  ModalTitle,\n  ModalHeader,\n  InjectedModalProps,\n  Button,\n  AutoRenewIcon,\n  TrophyGoldIcon,\n  Text,\n  Flex,\n  Heading,\n  Box,\n  LinkExternal,\n  ModalCloseButton,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { usePriceBnbBusd } from 'state/hooks'\nimport { markBetAsCollected } from 'state/predictions'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { usePredictionsContract } from 'hooks/useContract'\nimport { formatBnb } from '../helpers'\n\ninterface CollectRoundWinningsModalProps extends InjectedModalProps {\n  payout: number\n  roundId: string\n  epoch: number\n  onSuccess?: () => Promise<void>\n}\n\nconst Modal = styled(ModalContainer)`\n  overflow: visible;\n`\n\nconst BunnyDecoration = styled.div`\n  position: absolute;\n  top: -116px; // line up bunny at the top of the modal\n  left: 0px;\n  text-align: center;\n  width: 100%;\n`\n\nconst CollectRoundWinningsModal: React.FC<CollectRoundWinningsModalProps> = ({\n  payout,\n  roundId,\n  epoch,\n  onDismiss,\n  onSuccess,\n}) => {\n  const [isPendingTx, setIsPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const predictionsContract = usePredictionsContract()\n  const bnbBusdPrice = usePriceBnbBusd()\n  const dispatch = useAppDispatch()\n\n  const handleClick = () => {\n    predictionsContract.methods\n      .claim(epoch)\n      .send({ from: account })\n      .once('sending', () => {\n        setIsPendingTx(true)\n      })\n      .once('receipt', async (result) => {\n        if (onSuccess) {\n          await onSuccess()\n        }\n\n        dispatch(markBetAsCollected({ account, roundId }))\n        onDismiss()\n        setIsPendingTx(false)\n        toastSuccess(\n          t('Winnings collected!'),\n          <Box>\n            <Text as=\"p\" mb=\"8px\">\n              {t('Your prizes have been sent to your wallet')}\n            </Text>\n            {result.transactionHash && (\n              <LinkExternal href={`https://bscscan.com/tx/${result.transactionHash}`}>\n                {t('View on BscScan')}\n              </LinkExternal>\n            )}\n          </Box>,\n        )\n      })\n      .once('error', (error) => {\n        setIsPendingTx(false)\n        toastError('Error', error?.message)\n        console.error(error)\n      })\n  }\n\n  return (\n    <Modal minWidth=\"288px\" position=\"relative\" mt=\"124px\">\n      <BunnyDecoration>\n        <img src=\"/images/decorations/prize-bunny.png\" alt=\"bunny decoration\" height=\"124px\" width=\"168px\" />\n      </BunnyDecoration>\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Collect Winnings')}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <TrophyGoldIcon width=\"96px\" mx=\"auto\" mb=\"24px\" />\n        <Flex alignItems=\"start\" justifyContent=\"space-between\" mb=\"24px\">\n          <Text>{t('Collecting')}</Text>\n          <Box style={{ textAlign: 'right' }}>\n            <Text>{`${formatBnb(payout)} BNB`}</Text>\n            <Text fontSize=\"12px\" color=\"textSubtle\">\n              {`~$${formatBnb(bnbBusdPrice.times(payout).toNumber())}`}\n            </Text>\n          </Box>\n        </Flex>\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={handleClick}\n          isLoading={isPendingTx}\n          endIcon={isPendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        >\n          {t('Confirm')}\n        </Button>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default CollectRoundWinningsModal\n"]},"metadata":{},"sourceType":"module"}