{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, Heading, Won, useModal } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery';\nimport useTickets, { useTotalClaim } from 'hooks/useTickets';\nimport Loading from '../Loading';\nimport MyTicketsModal from '../TicketCard/UserTicketsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`;\n_c = WinningsWrapper;\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`;\n_c2 = IconWrapper;\nconst StyledCardActions = styled.div`\n  margin-top: ${props => props.theme.spacing[3]}px;\n`;\n_c3 = StyledCardActions;\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n_c4 = StyledCardContentInner;\nconst StyledButton = styled(Button)`\n  margin-top: ${props => props.theme.spacing[1]}px;\n`;\n_c5 = StyledButton;\n\nconst PrizesWonContent = ({\n  onSuccess\n}) => {\n  _s();\n\n  const [requestedClaim, setRequestedClaim] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  const {\n    claimLoading,\n    claimAmount\n  } = useTotalClaim();\n  const {\n    onMultiClaim\n  } = useMultiClaimLottery();\n  const tickets = useTickets();\n  const [onPresentMyTickets] = useModal( /*#__PURE__*/_jsxDEV(MyTicketsModal, {\n    myTicketNumbers: tickets,\n    from: \"buy\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 41\n  }, this));\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true);\n      const txHash = await onMultiClaim(); // user rejected tx or didn't go thru\n\n      if (txHash) {\n        onSuccess();\n        setRequestedClaim(false);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onMultiClaim, setRequestedClaim, onSuccess]);\n  const winnings = getBalanceNumber(claimAmount).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(StyledCardContentInner, {\n    children: [/*#__PURE__*/_jsxDEV(IconWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Won, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h3\",\n      scale: \"lg\",\n      color: \"secondary\",\n      children: t('You won!')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), claimLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 24\n    }, this), !claimLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(WinningsWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h4\",\n          scale: \"xl\",\n          style: {\n            marginRight: '6px'\n          },\n          children: winnings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h4\",\n          scale: \"lg\",\n          children: \"CAKE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(StyledCardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        width: \"100%\",\n        disabled: requestedClaim,\n        onClick: handleClaim,\n        children: t('Collect')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n      variant: \"text\",\n      onClick: onPresentMyTickets,\n      children: t('View your tickets')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrizesWonContent, \"VgWGfb3rt+fXun7vRG+gmWRMhW8=\", false, function () {\n  return [useTranslation, useTotalClaim, useMultiClaimLottery, useTickets, useModal];\n});\n\n_c6 = PrizesWonContent;\nexport default PrizesWonContent;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"WinningsWrapper\");\n$RefreshReg$(_c2, \"IconWrapper\");\n$RefreshReg$(_c3, \"StyledCardActions\");\n$RefreshReg$(_c4, \"StyledCardContentInner\");\n$RefreshReg$(_c5, \"StyledButton\");\n$RefreshReg$(_c6, \"PrizesWonContent\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx"],"names":["React","useCallback","useState","styled","Button","Heading","Won","useModal","useTranslation","getBalanceNumber","useMultiClaimLottery","useTickets","useTotalClaim","Loading","MyTicketsModal","WinningsWrapper","div","IconWrapper","StyledCardActions","props","theme","spacing","StyledCardContentInner","StyledButton","PrizesWonContent","onSuccess","requestedClaim","setRequestedClaim","t","claimLoading","claimAmount","onMultiClaim","tickets","onPresentMyTickets","handleClaim","txHash","e","console","error","winnings","toFixed","marginRight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,GAA1B,EAA+BC,QAA/B,QAA+C,oBAA/C;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAOC,UAAP,IAAqBC,aAArB,QAA0C,kBAA1C;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;;AAEA,MAAMC,eAAe,GAAGZ,MAAM,CAACa,GAAI;AACnC;AACA;AACA,CAHA;KAAMD,e;AAKN,MAAME,WAAW,GAAGd,MAAM,CAACa,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMC,W;AASN,MAAMC,iBAAiB,GAAGf,MAAM,CAACa,GAAI;AACrC,gBAAiBG,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;AAClD,CAFA;MAAMH,iB;AAIN,MAAMI,sBAAsB,GAAGnB,MAAM,CAACa,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,CANA;MAAMM,sB;AAQN,MAAMC,YAAY,GAAGpB,MAAM,CAACC,MAAD,CAAS;AACpC,gBAAiBe,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;AAClD,CAFA;MAAME,Y;;AAQN,MAAMC,gBAAiD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAC3E,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAE0B,IAAAA;AAAF,MAAQpB,cAAc,EAA5B;AACA,QAAM;AAAEqB,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAgClB,aAAa,EAAnD;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAmBrB,oBAAoB,EAA7C;AACA,QAAMsB,OAAO,GAAGrB,UAAU,EAA1B;AACA,QAAM,CAACsB,kBAAD,IAAuB1B,QAAQ,eAAC,QAAC,cAAD;AAAgB,IAAA,eAAe,EAAEyB,OAAjC;AAA0C,IAAA,IAAI,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,UAAD,CAArC;AAEA,QAAME,WAAW,GAAGjC,WAAW,CAAC,YAAY;AAC1C,QAAI;AACF0B,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,YAAMQ,MAAM,GAAG,MAAMJ,YAAY,EAAjC,CAFE,CAGF;;AACA,UAAII,MAAJ,EAAY;AACVV,QAAAA,SAAS;AACTE,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AACF,KARD,CAQE,OAAOS,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,GAZ8B,EAY5B,CAACL,YAAD,EAAeJ,iBAAf,EAAkCF,SAAlC,CAZ4B,CAA/B;AAcA,QAAMc,QAAQ,GAAG9B,gBAAgB,CAACqB,WAAD,CAAhB,CAA8BU,OAA9B,CAAsC,CAAtC,CAAjB;AAEA,sBACE,QAAC,sBAAD;AAAA,4BACE,QAAC,WAAD;AAAA,6BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAiB,MAAA,KAAK,EAAC,IAAvB;AAA4B,MAAA,KAAK,EAAC,WAAlC;AAAA,gBACGZ,CAAC,CAAC,UAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YAJF,EAOGC,YAAY,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAPnB,EAQG,CAACA,YAAD,iBACC;AAAA,6BACE,QAAC,eAAD;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,IAAZ;AAAiB,UAAA,KAAK,EAAC,IAAvB;AAA4B,UAAA,KAAK,EAAE;AAAEY,YAAAA,WAAW,EAAE;AAAf,WAAnC;AAAA,oBACGF;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,IAAZ;AAAiB,UAAA,KAAK,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBATJ,eAoBE,QAAC,iBAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,EAAEb,cAA/B;AAA+C,QAAA,OAAO,EAAEQ,WAAxD;AAAA,kBACGN,CAAC,CAAC,SAAD;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF,eAyBE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAC,MAAtB;AAA6B,MAAA,OAAO,EAAEK,kBAAtC;AAAA,gBACGL,CAAC,CAAC,mBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAvDD;;GAAMJ,gB;UAEUhB,c,EACwBI,a,EACbF,oB,EACTC,U,EACaJ,Q;;;MANzBiB,gB;AAyDN,eAAeA,gBAAf","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\ninterface PrizesWonContentProps {\n  onSuccess: () => void\n}\n\nconst PrizesWonContent: React.FC<PrizesWonContentProps> = ({ onSuccess }) => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const { t } = useTranslation()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        onSuccess()\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim, onSuccess])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" scale=\"lg\" color=\"secondary\">\n        {t('You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" scale=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" scale=\"lg\">\n              CAKE\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\n          {t('Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {t('View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n"]},"metadata":{},"sourceType":"module"}