{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\n\nconst usePersistState = (initialValue, localStorageKey) => {\n  _s();\n\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey);\n      return valueFromLS ? JSON.parse(valueFromLS) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(value));\n  }, [value, localStorageKey]);\n  return [value, setValue];\n};\n\n_s(usePersistState, \"gTfyBTqgzTuT3K5AITdJNTwjDoo=\");\n\nexport default usePersistState;","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/hooks/usePersistState.ts"],"names":["useEffect","useState","usePersistState","initialValue","localStorageKey","value","setValue","valueFromLS","localStorage","getItem","JSON","parse","error","setItem","stringify"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA;AACA;AACA;;AACA,MAAMC,eAAe,GAAG,CAACC,YAAD,EAAoBC,eAApB,KAAgD;AAAA;;AACtE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,MAAM;AACvC,QAAI;AACF,YAAMM,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBL,eAArB,CAApB;AAEA,aAAOG,WAAW,GAAGG,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAH,GAA6BJ,YAA/C;AACD,KAJD,CAIE,OAAOS,KAAP,EAAc;AACd,aAAOT,YAAP;AACD;AACF,GARiC,CAAlC;AAUAH,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,YAAY,CAACK,OAAb,CAAqBT,eAArB,EAAsCM,IAAI,CAACI,SAAL,CAAeT,KAAf,CAAtC;AACD,GAFQ,EAEN,CAACA,KAAD,EAAQD,eAAR,CAFM,CAAT;AAIA,SAAO,CAACC,KAAD,EAAQC,QAAR,CAAP;AACD,CAhBD;;GAAMJ,e;;AAkBN,eAAeA,eAAf","sourcesContent":["import { useEffect, useState } from 'react'\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, localStorageKey: string) => {\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? JSON.parse(valueFromLS) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(value))\n  }, [value, localStorageKey])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n"]},"metadata":{},"sourceType":"module"}