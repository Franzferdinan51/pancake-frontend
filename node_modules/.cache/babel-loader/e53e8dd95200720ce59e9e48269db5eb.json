{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/views/Pools/components/BountyModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport styled from 'styled-components';\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { useCakeVaultContract } from 'hooks/useContract';\nimport useTheme from 'hooks/useTheme';\nimport useToast from 'hooks/useToast';\nimport { useTranslation } from 'contexts/Localization';\nimport UnlockButton from 'components/UnlockButton';\nimport Balance from 'components/Balance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Divider = styled.div`\n  background-color: ${({\n  theme\n}) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`;\n_c = Divider;\n\nconst BountyModal = ({\n  cakeBountyToDisplay,\n  dollarBountyToDisplay,\n  totalPendingCakeHarvest,\n  callFee,\n  onDismiss,\n  TooltipComponent\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    theme\n  } = useTheme();\n  const {\n    toastError,\n    toastSuccess\n  } = useToast();\n  const cakeVaultContract = useCakeVaultContract();\n  const [pendingTx, setPendingTx] = useState(false);\n  const callFeeAsDecimal = callFee / 100;\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18);\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(TooltipComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 61\n  }, this), {\n    placement: 'bottom',\n    tooltipPadding: {\n      right: 15\n    }\n  });\n\n  const handleConfirmClick = async () => {\n    cakeVaultContract.methods.harvest().send({\n      from: account\n    }).on('sending', () => {\n      setPendingTx(true);\n    }).on('receipt', () => {\n      toastSuccess(t('Bounty collected!'), t('CAKE bounty has been sent to your wallet.'));\n      setPendingTx(false);\n      onDismiss();\n    }).on('error', error => {\n      console.error(error);\n      toastError(t('Could not be collected'), t(`There may be an issue with your transaction, or another user claimed the bounty first.`));\n      setPendingTx(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('Claim Bounty'),\n    onDismiss: onDismiss,\n    headerBackground: theme.colors.gradients.cardHeader,\n    children: [tooltipVisible && tooltip, /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"flex-start\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: t(\"You'll claim\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Balance, {\n          bold: true,\n          value: cakeBountyToDisplay,\n          decimals: 7,\n          unit: \" CAKE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"textSubtle\",\n          children: /*#__PURE__*/_jsxDEV(Balance, {\n            fontSize: \"12px\",\n            color: \"textSubtle\",\n            value: dollarBountyToDisplay,\n            decimals: 2,\n            unit: \" USD\",\n            prefix: \"~\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"14px\",\n        color: \"textSubtle\",\n        children: t('Pool total pending yield')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Balance, {\n        color: \"textSubtle\",\n        value: totalYieldToDisplay,\n        unit: \" CAKE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      mb: \"24px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"14px\",\n        color: \"textSubtle\",\n        children: t('Bounty')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"14px\",\n        color: \"textSubtle\",\n        children: [callFeeAsDecimal, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), account ? /*#__PURE__*/_jsxDEV(Button, {\n      isLoading: pendingTx,\n      endIcon: pendingTx ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n        spin: true,\n        color: \"currentColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 32\n      }, this) : null,\n      onClick: handleConfirmClick,\n      mb: \"28px\",\n      children: t('Confirm')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(UnlockButton, {\n      mb: \"28px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"16px\",\n        bold: true,\n        color: \"textSubtle\",\n        mr: \"4px\",\n        children: t(\"What's this?\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: targetRef,\n        children: /*#__PURE__*/_jsxDEV(HelpIcon, {\n          color: \"textSubtle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BountyModal, \"zTxNIWhmKfjtDjQt2OE4h+J/A8k=\", false, function () {\n  return [useTranslation, useWeb3React, useTheme, useToast, useCakeVaultContract, useTooltip];\n});\n\n_c2 = BountyModal;\nexport default BountyModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Divider\");\n$RefreshReg$(_c2, \"BountyModal\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Pools/components/BountyModal.tsx"],"names":["React","useState","useWeb3React","styled","Modal","Text","Flex","Button","HelpIcon","AutoRenewIcon","useTooltip","getBalanceNumber","useCakeVaultContract","useTheme","useToast","useTranslation","UnlockButton","Balance","Divider","div","theme","colors","backgroundDisabled","BountyModal","cakeBountyToDisplay","dollarBountyToDisplay","totalPendingCakeHarvest","callFee","onDismiss","TooltipComponent","t","account","toastError","toastSuccess","cakeVaultContract","pendingTx","setPendingTx","callFeeAsDecimal","totalYieldToDisplay","targetRef","tooltip","tooltipVisible","placement","tooltipPadding","right","handleConfirmClick","methods","harvest","send","from","on","error","console","gradients","cardHeader"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8CC,aAA9C,EAA6DC,UAA7D,QAA+E,oBAA/E;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAWA,MAAMC,OAAO,GAAGf,MAAM,CAACgB,GAAI;AAC3B,sBAAsB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,kBAAmB;AACrE;AACA;AACA;AACA,CALA;KAAMJ,O;;AAON,MAAMK,WAAuC,GAAG,CAAC;AAC/CC,EAAAA,mBAD+C;AAE/CC,EAAAA,qBAF+C;AAG/CC,EAAAA,uBAH+C;AAI/CC,EAAAA,OAJ+C;AAK/CC,EAAAA,SAL+C;AAM/CC,EAAAA;AAN+C,CAAD,KAO1C;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAQf,cAAc,EAA5B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAc7B,YAAY,EAAhC;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAYP,QAAQ,EAA1B;AACA,QAAM;AAAEmB,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA+BnB,QAAQ,EAA7C;AACA,QAAMoB,iBAAiB,GAAGtB,oBAAoB,EAA9C;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BnC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMoC,gBAAgB,GAAGV,OAAO,GAAG,GAAnC;AACA,QAAMW,mBAAmB,GAAG3B,gBAAgB,CAACe,uBAAD,EAA0B,EAA1B,CAA5C;AACA,QAAM;AAAEa,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAyC/B,UAAU,eAAC,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,UAAD,EAAuB;AAC9EgC,IAAAA,SAAS,EAAE,QADmE;AAE9EC,IAAAA,cAAc,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAF8D,GAAvB,CAAzD;;AAKA,QAAMC,kBAAkB,GAAG,YAAY;AACrCX,IAAAA,iBAAiB,CAACY,OAAlB,CACGC,OADH,GAEGC,IAFH,CAEQ;AAAEC,MAAAA,IAAI,EAAElB;AAAR,KAFR,EAGGmB,EAHH,CAGM,SAHN,EAGiB,MAAM;AACnBd,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KALH,EAMGc,EANH,CAMM,SANN,EAMiB,MAAM;AACnBjB,MAAAA,YAAY,CAACH,CAAC,CAAC,mBAAD,CAAF,EAAyBA,CAAC,CAAC,2CAAD,CAA1B,CAAZ;AACAM,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAR,MAAAA,SAAS;AACV,KAVH,EAWGsB,EAXH,CAWM,OAXN,EAWgBC,KAAD,IAAW;AACtBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAnB,MAAAA,UAAU,CACRF,CAAC,CAAC,wBAAD,CADO,EAERA,CAAC,CAAE,wFAAF,CAFO,CAAV;AAIAM,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAlBH;AAmBD,GApBD;;AAsBA,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEN,CAAC,CAAC,cAAD,CAAf;AAAiC,IAAA,SAAS,EAAEF,SAA5C;AAAuD,IAAA,gBAAgB,EAAER,KAAK,CAACC,MAAN,CAAagC,SAAb,CAAuBC,UAAhG;AAAA,eACGb,cAAc,IAAID,OADrB,eAEE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,YAAjB;AAA8B,MAAA,cAAc,EAAC,eAA7C;AAAA,8BACE,QAAC,IAAD;AAAA,kBAAOV,CAAC,CAAC,cAAD;AAAR;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,aAAa,EAAC,QAApB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,IAAI,MAAb;AAAc,UAAA,KAAK,EAAEN,mBAArB;AAA0C,UAAA,QAAQ,EAAE,CAApD;AAAuD,UAAA,IAAI,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,MAAf;AAAsB,UAAA,KAAK,EAAC,YAA5B;AAAA,iCACE,QAAC,OAAD;AACE,YAAA,QAAQ,EAAC,MADX;AAEE,YAAA,KAAK,EAAC,YAFR;AAGE,YAAA,KAAK,EAAEC,qBAHT;AAIE,YAAA,QAAQ,EAAE,CAJZ;AAKE,YAAA,IAAI,EAAC,MALP;AAME,YAAA,MAAM,EAAC;AANT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAkBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAlBF,eAmBE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,QAAjB;AAA0B,MAAA,cAAc,EAAC,eAAzC;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAC,YAA5B;AAAA,kBACGK,CAAC,CAAC,0BAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAA4B,QAAA,KAAK,EAAEQ,mBAAnC;AAAwD,QAAA,IAAI,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,eAyBE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,QAAjB;AAA0B,MAAA,cAAc,EAAC,eAAzC;AAAyD,MAAA,EAAE,EAAC,MAA5D;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAC,YAA5B;AAAA,kBACGR,CAAC,CAAC,QAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAC,YAA5B;AAAA,mBACGO,gBADH;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF,EAiCGN,OAAO,gBACN,QAAC,MAAD;AACE,MAAA,SAAS,EAAEI,SADb;AAEE,MAAA,OAAO,EAAEA,SAAS,gBAAG,QAAC,aAAD;AAAe,QAAA,IAAI,MAAnB;AAAoB,QAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAH,GAAiD,IAFrE;AAGE,MAAA,OAAO,EAAEU,kBAHX;AAIE,MAAA,EAAE,EAAC,MAJL;AAAA,gBAMGf,CAAC,CAAC,SAAD;AANJ;AAAA;AAAA;AAAA;AAAA,YADM,gBAUN,QAAC,YAAD;AAAc,MAAA,EAAE,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YA3CJ,eA6CE,QAAC,IAAD;AAAM,MAAA,cAAc,EAAC,QAArB;AAA8B,MAAA,UAAU,EAAC,QAAzC;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAsB,QAAA,IAAI,MAA1B;AAA2B,QAAA,KAAK,EAAC,YAAjC;AAA8C,QAAA,EAAE,EAAC,KAAjD;AAAA,kBACGA,CAAC,CAAC,cAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAM,QAAA,GAAG,EAAES,SAAX;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YA7CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwDD,CAnGD;;GAAMhB,W;UAQUR,c,EACMb,Y,EACFW,Q,EACmBC,Q,EACXF,oB,EAIqBF,U;;;MAhB3Ca,W;AAqGN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\nimport Balance from 'components/Balance'\n\ninterface BountyModalProps {\n  cakeBountyToDisplay: number\n  dollarBountyToDisplay: number\n  totalPendingCakeHarvest: BigNumber\n  callFee: number\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({\n  cakeBountyToDisplay,\n  dollarBountyToDisplay,\n  totalPendingCakeHarvest,\n  callFee,\n  onDismiss,\n  TooltipComponent,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    cakeVaultContract.methods\n      .harvest()\n      .send({ from: account })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Bounty collected!'), t('CAKE bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(\n          t('Could not be collected'),\n          t(`There may be an issue with your transaction, or another user claimed the bounty first.`),\n        )\n        setPendingTx(false)\n      })\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t(\"You'll claim\")}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n        >\n          {t('Confirm')}\n        </Button>\n      ) : (\n        <UnlockButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t(\"What's this?\")}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n"]},"metadata":{},"sourceType":"module"}