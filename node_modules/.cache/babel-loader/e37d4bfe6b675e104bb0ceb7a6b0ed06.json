{"ast":null,"code":"import web3NoAccount from 'utils/web3';\nimport { poolsConfig } from 'config/constants';\nimport { PoolCategory } from 'config/constants/types'; // Addresses\n\nimport { getAddress, getPancakeProfileAddress, getPancakeRabbitsAddress, getBunnyFactoryAddress, getBunnySpecialAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress, getMasterChefAddress, getPointCenterIfoAddress, getClaimRefundAddress, getTradingCompetitionAddress, getEasterNftAddress, getCakeVaultAddress, getPredictionsAddress, getChainlinkOracleAddress } from 'utils/addressHelpers'; // ABI\n\nimport profileABI from 'config/abi/pancakeProfile.json';\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json';\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json';\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json';\nimport bep20Abi from 'config/abi/erc20.json';\nimport erc721Abi from 'config/abi/erc721.json';\nimport lpTokenAbi from 'config/abi/lpToken.json';\nimport cakeAbi from 'config/abi/cake.json';\nimport ifoV1Abi from 'config/abi/ifoV1.json';\nimport ifoV2Abi from 'config/abi/ifoV2.json';\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json';\nimport lotteryAbi from 'config/abi/lottery.json';\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json';\nimport masterChef from 'config/abi/masterchef.json';\nimport sousChef from 'config/abi/sousChef.json';\nimport sousChefV2 from 'config/abi/sousChefV2.json';\nimport sousChefBnb from 'config/abi/sousChefBnb.json';\nimport claimRefundAbi from 'config/abi/claimRefund.json';\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json';\nimport easterNftAbi from 'config/abi/easterNft.json';\nimport cakeVaultAbi from 'config/abi/cakeVault.json';\nimport predictionsAbi from 'config/abi/predictions.json';\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json';\n\nconst getContract = (abi, address, web3) => {\n  const _web3 = web3 !== null && web3 !== void 0 ? web3 : web3NoAccount;\n\n  return new _web3.eth.Contract(abi, address);\n};\n\nexport const getBep20Contract = (address, web3) => {\n  return getContract(bep20Abi, address, web3);\n};\nexport const getErc721Contract = (address, web3) => {\n  return getContract(erc721Abi, address, web3);\n};\nexport const getLpContract = (address, web3) => {\n  return getContract(lpTokenAbi, address, web3);\n};\nexport const getIfoV1Contract = (address, web3) => {\n  return getContract(ifoV1Abi, address, web3);\n};\nexport const getIfoV2Contract = (address, web3) => {\n  return getContract(ifoV2Abi, address, web3);\n};\nexport const getSouschefContract = (id, web3) => {\n  const config = poolsConfig.find(pool => pool.sousId === id);\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef;\n  return getContract(abi, getAddress(config.contractAddress), web3);\n};\nexport const getSouschefV2Contract = (id, web3) => {\n  const config = poolsConfig.find(pool => pool.sousId === id);\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3);\n};\nexport const getPointCenterIfoContract = web3 => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3);\n};\nexport const getCakeContract = web3 => {\n  return getContract(cakeAbi, getCakeAddress(), web3);\n};\nexport const getProfileContract = web3 => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3);\n};\nexport const getPancakeRabbitContract = web3 => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3);\n};\nexport const getBunnyFactoryContract = web3 => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3);\n};\nexport const getBunnySpecialContract = web3 => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3);\n};\nexport const getLotteryContract = web3 => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3);\n};\nexport const getLotteryTicketContract = web3 => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3);\n};\nexport const getMasterchefContract = web3 => {\n  return getContract(masterChef, getMasterChefAddress(), web3);\n};\nexport const getClaimRefundContract = web3 => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3);\n};\nexport const getTradingCompetitionContract = web3 => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3);\n};\nexport const getEasterNftContract = web3 => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3);\n};\nexport const getCakeVaultContract = web3 => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3);\n};\nexport const getPredictionsContract = web3 => {\n  return getContract(predictionsAbi, getPredictionsAddress(), web3);\n};\nexport const getChainlinkOracleContract = web3 => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3);\n};","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/utils/contractHelpers.ts"],"names":["web3NoAccount","poolsConfig","PoolCategory","getAddress","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getBunnySpecialAddress","getCakeAddress","getLotteryAddress","getLotteryTicketAddress","getMasterChefAddress","getPointCenterIfoAddress","getClaimRefundAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","profileABI","pancakeRabbitsAbi","bunnyFactoryAbi","bunnySpecialAbi","bep20Abi","erc721Abi","lpTokenAbi","cakeAbi","ifoV1Abi","ifoV2Abi","pointCenterIfo","lotteryAbi","lotteryTicketAbi","masterChef","sousChef","sousChefV2","sousChefBnb","claimRefundAbi","tradingCompetitionAbi","easterNftAbi","cakeVaultAbi","predictionsAbi","chainlinkOracleAbi","getContract","abi","address","web3","_web3","eth","Contract","getBep20Contract","getErc721Contract","getLpContract","getIfoV1Contract","getIfoV2Contract","getSouschefContract","id","config","find","pool","sousId","poolCategory","BINANCE","contractAddress","getSouschefV2Contract","getPointCenterIfoContract","getCakeContract","getProfileContract","getPancakeRabbitContract","getBunnyFactoryContract","getBunnySpecialContract","getLotteryContract","getLotteryTicketContract","getMasterchefContract","getClaimRefundContract","getTradingCompetitionContract","getEasterNftContract","getCakeVaultContract","getPredictionsContract","getChainlinkOracleContract"],"mappings":"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","sourcesContent":["import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\n\nconst getContract = (abi: any, address: string, web3?: Web3) => {\n  const _web3 = web3 ?? web3NoAccount\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address)\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getErc721Contract = (address: string, web3?: Web3) => {\n  return getContract(erc721Abi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV1Abi, address, web3)\n}\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV2Abi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getSouschefV2Contract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getTradingCompetitionContract = (web3?: Web3) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\n}\nexport const getEasterNftContract = (web3?: Web3) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\n}\nexport const getCakeVaultContract = (web3?: Web3) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3)\n}\nexport const getPredictionsContract = (web3?: Web3) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), web3)\n}\nexport const getChainlinkOracleContract = (web3?: Web3) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3)\n}\n"]},"metadata":{},"sourceType":"module"}