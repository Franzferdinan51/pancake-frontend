{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/components/Balance.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport CountUp from 'react-countup';\nimport { Text } from '@pancakeswap/uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Balance = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  ...props\n}) => {\n  _s();\n\n  const previousValue = useRef(0);\n  useEffect(() => {\n    previousValue.current = value;\n  }, [value]);\n  const showPrefix = Boolean(value && prefix);\n  const showUnit = Boolean(value && unit);\n  return /*#__PURE__*/_jsxDEV(Text, {\n    color: isDisabled ? 'textDisabled' : color,\n    ...props,\n    children: [showPrefix && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: prefix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(CountUp, {\n      start: previousValue.current,\n      end: value,\n      decimals: decimals,\n      duration: 1,\n      separator: \",\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), showUnit && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: unit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Balance, \"7sxqKrCAfH7mvAmhUempIz0vd8c=\");\n\n_c = Balance;\nexport default Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/components/Balance.tsx"],"names":["React","useEffect","useRef","CountUp","Text","Balance","value","color","decimals","isDisabled","unit","prefix","props","previousValue","current","showPrefix","Boolean","showUnit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,IAAT,QAAgC,oBAAhC;;;AAUA,MAAMC,OAA+B,GAAG,CAAC;AACvCC,EAAAA,KADuC;AAEvCC,EAAAA,KAAK,GAAG,MAF+B;AAGvCC,EAAAA,QAAQ,GAAG,CAH4B;AAIvCC,EAAAA,UAAU,GAAG,KAJ0B;AAKvCC,EAAAA,IALuC;AAMvCC,EAAAA,MANuC;AAOvC,KAAGC;AAPoC,CAAD,KAQlC;AAAA;;AACJ,QAAMC,aAAa,GAAGX,MAAM,CAAC,CAAD,CAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa,CAACC,OAAd,GAAwBR,KAAxB;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,QAAMS,UAAU,GAAGC,OAAO,CAACV,KAAK,IAAIK,MAAV,CAA1B;AACA,QAAMM,QAAQ,GAAGD,OAAO,CAACV,KAAK,IAAII,IAAV,CAAxB;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAED,UAAU,GAAG,cAAH,GAAoBF,KAA3C;AAAA,OAAsDK,KAAtD;AAAA,eACGG,UAAU,iBAAI;AAAA,gBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA,YADjB,eAEE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEE,aAAa,CAACC,OAA9B;AAAuC,MAAA,GAAG,EAAER,KAA5C;AAAmD,MAAA,QAAQ,EAAEE,QAA7D;AAAuE,MAAA,QAAQ,EAAE,CAAjF;AAAoF,MAAA,SAAS,EAAC;AAA9F;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGS,QAAQ,iBAAI;AAAA,gBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAzBD;;GAAML,O;;KAAAA,O;AA2BN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  const showPrefix = Boolean(value && prefix)\n  const showUnit = Boolean(value && unit)\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} {...props}>\n      {showPrefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {showUnit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n"]},"metadata":{},"sourceType":"module"}