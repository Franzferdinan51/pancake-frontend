{"ast":null,"code":"var _jsxFileName = \"/home/duckets/Documents/pancake-frontend-1/src/views/Home/components/EarnAPRCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton } from '@pancakeswap/uikit';\nimport max from 'lodash/max';\nimport { NavLink } from 'react-router-dom';\nimport { useTranslation } from 'contexts/Localization';\nimport BigNumber from 'bignumber.js';\nimport { getFarmApr } from 'utils/apr';\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from 'state/hooks';\nimport { getAddress } from 'utils/addressHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`;\n_c = StyledFarmStakingCard;\nconst CardMidContent = styled(Heading).attrs({\n  scale: 'xl'\n})`\n  line-height: 44px;\n`;\n_c2 = CardMidContent;\n\nconst EarnAPRCard = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    data: farmsLP\n  } = useFarms();\n  const prices = useGetApiPrices();\n  const cakePrice = usePriceCakeBusd();\n  const highestApr = useMemo(() => {\n    const aprs = farmsLP // Filter inactive farms, because their theoretical APR is super high. In practice, it's 0.\n    .filter(farm => farm.pid !== 0 && farm.multiplier !== '0X').map(farm => {\n      if (farm.lpTotalInQuoteToken && prices) {\n        const quoteTokenPriceUsd = prices[getAddress(farm.quoteToken.address).toLowerCase()];\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd);\n        return getFarmApr(farm.poolWeight, cakePrice, totalLiquidity);\n      }\n\n      return null;\n    });\n    const maxApr = max(aprs);\n    return maxApr === null || maxApr === void 0 ? void 0 : maxApr.toLocaleString('en-US', {\n      maximumFractionDigits: 2\n    });\n  }, [cakePrice, farmsLP, prices]);\n  return /*#__PURE__*/_jsxDEV(StyledFarmStakingCard, {\n    children: /*#__PURE__*/_jsxDEV(NavLink, {\n      exact: true,\n      activeClassName: \"active\",\n      to: \"/farms\",\n      id: \"farm-apr-cta\",\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          color: \"contrast\",\n          scale: \"lg\",\n          children: \"Earn up to\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardMidContent, {\n          color: \"#7645d9\",\n          children: highestApr ? `${highestApr}% ${t('APR')}` : /*#__PURE__*/_jsxDEV(Skeleton, {\n            animation: \"pulse\",\n            variant: \"rect\",\n            height: \"44px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            color: \"contrast\",\n            scale: \"lg\",\n            children: \"in Farms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n            mt: 30,\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EarnAPRCard, \"BH6ZovZY2UXYAGzpBdyzDEtU6DI=\", false, function () {\n  return [useTranslation, useFarms, useGetApiPrices, usePriceCakeBusd];\n});\n\n_c3 = EarnAPRCard;\nexport default EarnAPRCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledFarmStakingCard\");\n$RefreshReg$(_c2, \"CardMidContent\");\n$RefreshReg$(_c3, \"EarnAPRCard\");","map":{"version":3,"sources":["/home/duckets/Documents/pancake-frontend-1/src/views/Home/components/EarnAPRCard.tsx"],"names":["React","useMemo","styled","Heading","Card","CardBody","Flex","ArrowForwardIcon","Skeleton","max","NavLink","useTranslation","BigNumber","getFarmApr","useFarms","usePriceCakeBusd","useGetApiPrices","getAddress","StyledFarmStakingCard","theme","mediaQueries","lg","CardMidContent","attrs","scale","EarnAPRCard","t","data","farmsLP","prices","cakePrice","highestApr","aprs","filter","farm","pid","multiplier","map","lpTotalInQuoteToken","quoteTokenPriceUsd","quoteToken","address","toLowerCase","totalLiquidity","times","poolWeight","maxApr","toLocaleString","maximumFractionDigits"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton } from '@pancakeswap/uikit'\nimport max from 'lodash/max'\nimport { NavLink } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport { getFarmApr } from 'utils/apr'\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from 'state/hooks'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\n  line-height: 44px;\n`\nconst EarnAPRCard = () => {\n  const { t } = useTranslation()\n  const { data: farmsLP } = useFarms()\n  const prices = useGetApiPrices()\n  const cakePrice = usePriceCakeBusd()\n\n  const highestApr = useMemo(() => {\n    const aprs = farmsLP\n      // Filter inactive farms, because their theoretical APR is super high. In practice, it's 0.\n      .filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n      .map((farm) => {\n        if (farm.lpTotalInQuoteToken && prices) {\n          const quoteTokenPriceUsd = prices[getAddress(farm.quoteToken.address).toLowerCase()]\n          const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n          return getFarmApr(farm.poolWeight, cakePrice, totalLiquidity)\n        }\n        return null\n      })\n\n    const maxApr = max(aprs)\n    return maxApr?.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }, [cakePrice, farmsLP, prices])\n\n  return (\n    <StyledFarmStakingCard>\n      <NavLink exact activeClassName=\"active\" to=\"/farms\" id=\"farm-apr-cta\">\n        <CardBody>\n          <Heading color=\"contrast\" scale=\"lg\">\n            Earn up to\n          </Heading>\n          <CardMidContent color=\"#7645d9\">\n            {highestApr ? `${highestApr}% ${t('APR')}` : <Skeleton animation=\"pulse\" variant=\"rect\" height=\"44px\" />}\n          </CardMidContent>\n          <Flex justifyContent=\"space-between\">\n            <Heading color=\"contrast\" scale=\"lg\">\n              in Farms\n            </Heading>\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </Flex>\n        </CardBody>\n      </NavLink>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAPRCard\n"]},"metadata":{},"sourceType":"module"}